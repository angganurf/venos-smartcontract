{
  "contractName": "CakeFlexiblePool",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract ICakePool",
          "name": "_cakePool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "ChargePerformanceFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ChargeWithdrawFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastDepositedTime",
          "type": "uint256"
        }
      ],
      "name": "DepositCake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "performanceFee",
          "type": "uint256"
        }
      ],
      "name": "NewPerformanceFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "NewTreasury",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawAmountBooster",
          "type": "uint256"
        }
      ],
      "name": "NewWithdrawAmountBooster",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawFee",
          "type": "uint256"
        }
      ],
      "name": "NewWithdrawFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawFeePeriod",
          "type": "uint256"
        }
      ],
      "name": "NewWithdrawFeePeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "WithdrawShares",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_PERFORMANCE_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MAX_WITHDRAW_AMOUNT_BOOSTER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MAX_WITHDRAW_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MAX_WITHDRAW_FEE_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MIN_DEPOSIT_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MIN_WITHDRAW_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MIN_WITHDRAW_AMOUNT_BOOSTER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "cakePool",
      "outputs": [
        {
          "internalType": "contract ICakePool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "performanceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastDepositedTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cakeAtLastUserAction",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUserActionTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdrawAmountBooster",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdrawFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdrawFeePeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_performanceFee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawFee",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawFeePeriod",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawFeePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawAmountBooster",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawAmountBooster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPricePerFullShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "available",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract ICakePool\",\"name\":\"_cakePool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"ChargePerformanceFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ChargeWithdrawFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"}],\"name\":\"DepositCake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"performanceFee\",\"type\":\"uint256\"}],\"name\":\"NewPerformanceFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"NewTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawAmountBooster\",\"type\":\"uint256\"}],\"name\":\"NewWithdrawAmountBooster\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawFee\",\"type\":\"uint256\"}],\"name\":\"NewWithdrawFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawFeePeriod\",\"type\":\"uint256\"}],\"name\":\"NewWithdrawFeePeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"WithdrawShares\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_PERFORMANCE_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAW_AMOUNT_BOOSTER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAW_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAW_FEE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_DEPOSIT_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_WITHDRAW_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_WITHDRAW_AMOUNT_BOOSTER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePool\",\"outputs\":[{\"internalType\":\"contract ICakePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performanceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_performanceFee\",\"type\":\"uint256\"}],\"name\":\"setPerformanceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawAmountBooster\",\"type\":\"uint256\"}],\"name\":\"setWithdrawAmountBooster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFee\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFeePeriod\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFeePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cakeAtLastUserAction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUserActionTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAmountBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"available()\":{\"details\":\"The contract puts 100% of the tokens to work.\"},\"balanceOf()\":{\"details\":\"It includes tokens held by the contract and held in CakePool\"},\"constructor\":{\"params\":{\"_admin\":\": address of the admin\",\"_cakePool\":\": CakePool contract\",\"_token\":\": Cake token contract\",\"_treasury\":\": address of the treasury (collects fees)\"}},\"deposit(uint256)\":{\"details\":\"Only possible when contract not paused.\",\"params\":{\"_amount\":\": number of tokens to deposit (in CAKE)\"}},\"emergencyWithdraw()\":{\"details\":\"EMERGENCY ONLY. Only callable by the contract admin.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Only possible when contract not paused.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAdmin(address)\":{\"details\":\"Only callable by the contract owner.\"},\"setPerformanceFee(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setTreasury(address)\":{\"details\":\"Only callable by the contract owner.\"},\"setWithdrawAmountBooster(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setWithdrawFee(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setWithdrawFeePeriod(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Only possible when contract is paused.\"},\"withdraw(uint256)\":{\"params\":{\"_shares\":\": Number of shares to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"available()\":{\"notice\":\"Custom logic for how much the pool to be borrowed\"},\"balanceOf()\":{\"notice\":\"Calculates the total underlying tokens\"},\"constructor\":{\"notice\":\"Constructor\"},\"deposit(uint256)\":{\"notice\":\"Deposits funds into the Cake Flexible Pool.\"},\"emergencyWithdraw()\":{\"notice\":\"Withdraws from Cake Pool without caring about rewards.\"},\"getPricePerFullShare()\":{\"notice\":\"Calculates the price per share\"},\"inCaseTokensGetStuck(address)\":{\"notice\":\"Withdraw unexpected tokens sent to the Cake Flexible Pool\"},\"pause()\":{\"notice\":\"Triggers stopped state\"},\"setAdmin(address)\":{\"notice\":\"Sets admin address\"},\"setPerformanceFee(uint256)\":{\"notice\":\"Sets performance fee\"},\"setTreasury(address)\":{\"notice\":\"Sets treasury address\"},\"setWithdrawAmountBooster(uint256)\":{\"notice\":\"Sets withdraw amount booster\"},\"setWithdrawFee(uint256)\":{\"notice\":\"Sets withdraw fee\"},\"setWithdrawFeePeriod(uint256)\":{\"notice\":\"Sets withdraw fee period\"},\"unpause()\":{\"notice\":\"Returns to normal state\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws funds from the Cake Flexible Pool\"},\"withdrawAll()\":{\"notice\":\"Withdraws all funds for a user\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CakeFlexiblePool.sol\":\"CakeFlexiblePool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/CakeFlexiblePool.sol\":{\"keccak256\":\"0xced9307a95d6a8d72058b139f400cf50d4b042fe05e519cdbb7d7ce1994a8d26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41e26d13fa1feddba46ab034028bb4b5287cbff6795de0b34c5da5dc417420d\",\"dweb:/ipfs/QmSGZPE7LWGvYDAVEueLUejWQLqA9enSsPPNiXMnU1JzJM\"]},\"project:/contracts/interfaces/ICakePool.sol\":{\"keccak256\":\"0x8baf8c2885d56f809a3954e3c95c6096c8eef6a6bcc6951b3fd1f5c8d4d03c1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c9afe3e7f98f7b3df2b9c474c2f4b9fe6d31a6ea82f08939a45478a07cacaef\",\"dweb:/ipfs/QmPHJrZV4iebWEyweLYucxfef6cxFzDCafbXMopQWGYRsy\"]}},\"version\":1}",
  "bytecode": "0x60c06040526004805460ff60a01b1916600160a01b17905561271160055560c8600655600a6007556203f4806008553480156200003b57600080fd5b506040516200344b3803806200344b8339810160408190526200005e9162000508565b6200006933620000d9565b6000805460ff60a01b191690556001600160a01b03848116608081905284821660a052600380546001600160a01b0319908116868516179091556004805490911692841692909217909155620000cf908460001962000129602090811b6200217417901c565b5050505062000634565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b801580620001a75750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156200017f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001a5919062000570565b155b6200021f5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620002779185916200027c16565b505050565b6000620002d8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200035a60201b62002379179092919060201c565b805190915015620002775780806020019051810190620002f991906200058a565b620002775760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162000216565b60606200036b848460008562000375565b90505b9392505050565b606082471015620003d85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162000216565b6001600160a01b0385163b620004315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000216565b600080866001600160a01b031685876040516200044f9190620005e1565b60006040518083038185875af1925050503d80600081146200048e576040519150601f19603f3d011682016040523d82523d6000602084013e62000493565b606091505b509092509050620004a6828286620004b1565b979650505050505050565b60608315620004c25750816200036e565b825115620004d35782518084602001fd5b8160405162461bcd60e51b8152600401620002169190620005ff565b6001600160a01b03811681146200050557600080fd5b50565b600080600080608085870312156200051f57600080fd5b84516200052c81620004ef565b60208601519094506200053f81620004ef565b60408601519093506200055281620004ef565b60608601519092506200056581620004ef565b939692955090935050565b6000602082840312156200058357600080fd5b5051919050565b6000602082840312156200059d57600080fd5b815180151581146200036e57600080fd5b60005b83811015620005cb578181015183820152602001620005b1565b83811115620005db576000848401525b50505050565b60008251620005f5818460208701620005ae565b9190910192915050565b602081526000825180602084015262000620816040850160208701620005ae565b601f01601f19169190910160400192915050565b60805160a051612d8f620006bc60003960008181610502015281816109850152818161102c015281816110a6015281816118fd01528181611d52015261277901526000818161056f01528181610a8f01528181610b7001528181610d0b01528181611180015281816119ad01528181611a3c01528181611a880152611e340152612d8f6000f3fe608060405234801561001057600080fd5b50600436106102925760003560e01c8063853828b611610160578063d4b0de2f116100d8578063ed64a9671161008c578063f2fde38b11610071578063f2fde38b14610537578063f851a4401461054a578063fc0c546a1461056a57600080fd5b8063ed64a967146104fd578063f0f442601461052457600080fd5b8063def68a9c116100bd578063def68a9c146104d8578063df10b4e6146104eb578063e941fa78146104f457600080fd5b8063d4b0de2f146104c7578063db2e21bc146104d057600080fd5b80638dd313661161012f578063b6ac642a11610114578063b6ac642a14610498578063b6b55f25146104ab578063bdca9165146104be57600080fd5b80638dd3136614610485578063b68578441461030957600080fd5b8063853828b61461044d57806387788782146104555780638a180eea1461045e5780638da5cb5b1461046757600080fd5b80634cf088d91161020e578063715018a6116101c257806377c7b8fc116101a757806377c7b8fc1461043457806382dba6421461043c5780638456cb591461044557600080fd5b8063715018a614610424578063722713f71461042c57600080fd5b806361d027b3116101f357806361d027b3146103b9578063704b6c02146103fe57806370897b231461041157600080fd5b80634cf088d9146103615780635c975abb1461039657600080fd5b80632cfc5f01116102655780633a98ef391161024a5780633a98ef39146103485780633f4ba83a1461035157806348a0d7541461035957600080fd5b80632cfc5f011461032b5780632e1a7d4d1461033557600080fd5b806314c9253e146102975780631959a002146102b35780631ea30fef146103095780631efac1b814610316575b600080fd5b6102a060055481565b6040519081526020015b60405180910390f35b6102e96102c1366004612ae2565b6001602081905260009182526040909120805491810154600282015460039092015490919084565b6040805194855260208501939093529183015260608201526080016102aa565b6102a06509184e72a00081565b610329610324366004612b18565b610591565b005b6102a062093a8081565b610329610343366004612b18565b6106e6565b6102a060025481565b610329610c1e565b6102a0610cda565b6004546103869074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016102aa565b60005474010000000000000000000000000000000000000000900460ff16610386565b6004546103d99073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102aa565b61032961040c366004612ae2565b610d90565b61032961041f366004612b18565b610e88565b610329610fd0565b6102a0610fe4565b6102a0611211565b6102a061271081565b610329611251565b61032961130d565b6102a060065481565b6102a061271a81565b60005473ffffffffffffffffffffffffffffffffffffffff166103d9565b610329610493366004612b18565b611326565b6103296104a6366004612b18565b61154c565b6103296104b9366004612b18565b611694565b6102a06107d081565b6102a06101f481565b610329611be5565b6103296104e6366004612ae2565b611db1565b6102a060085481565b6102a060075481565b6103d97f000000000000000000000000000000000000000000000000000000000000000081565b610329610532366004612ae2565b611fc5565b610329610545366004612ae2565b6120bd565b6003546103d99073ffffffffffffffffffffffffffffffffffffffff1681565b6103d97f000000000000000000000000000000000000000000000000000000000000000081565b60035473ffffffffffffffffffffffffffffffffffffffff163314610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f00000000000000000000000000000000000000000060448201526064015b60405180910390fd5b62093a808111156106aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f7769746864726177466565506572696f642063616e6e6f74206265206d6f726560448201527f207468616e204d41585f57495448445241575f4645455f504552494f44000000606482015260840161060e565b60088190556040518181527fb89ddaddb7435be26824cb48d2d0186c9525a2e1ec057abcb502704cdc0686cc906020015b60405180910390a150565b3360009081526001602052604090208161075c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f7468696e6720746f20776974686472617700000000000000000000000000604482015260640161060e565b80548211156107c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f576974686472617720616d6f756e7420657863656564732062616c616e636500604482015260640161060e565b60006002546107d4610fe4565b83546107e09190612b60565b6107ea9190612b9d565b905060008260020154826107fe9190612bd8565b9050600080821561087a576127106006548461081a9190612b60565b6108249190612b9d565b915061082e610fe4565b60025461083b9084612b60565b6108459190612b9d565b90508085600001600082825461085b9190612bd8565b9250508190555080600260008282546108749190612bd8565b90915550505b845486111561088857845495505b600060025483610896610fe4565b6108a09190612bd8565b6108aa9089612b60565b6108b49190612b9d565b9050868660000160008282546108ca9190612bd8565b9250508190555086600260008282546108e39190612bd8565b90915550600090506108f58483612bef565b60045490915074010000000000000000000000000000000000000000900460ff16156109f7576509184e72a000811061092e5780610936565b6509184e72a0005b9050612710600554826109499190612b60565b6109539190612b9d565b6040517f5521e9bf000000000000000000000000000000000000000000000000000000008152600481018290529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635521e9bf90602401600060405180830381600087803b1580156109de57600080fd5b505af11580156109f2573d6000803e3d6000fd5b505050505b60006008548860010154610a0b9190612bef565b421015610a3c5761271060075484610a239190612b60565b610a2d9190612b9d565b9050610a398184612bd8565b92505b6000610a488287612bef565b90508015610b365780610a59610cda565b1015610a6c57610a67610cda565b610a6e565b805b600454909150610ab89073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683612392565b8515610afa57604080518781526020810187905233917fba099d38a7da8262f6dc89809a028ddb51ce1f8fe4d9c7554ef909078f6e10c9910160405180910390a25b8115610b365760405182815233907ff4451cbaeb1fedd1db1eed585be4980b066afa1fa1c2a59f361ca67191e9695a9060200160405180910390a25b83610b3f610cda565b1015610b5257610b4d610cda565b610b54565b835b9350610b9773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163386612392565b885415610bc957600254610ba9610fe4565b8a54610bb59190612b60565b610bbf9190612b9d565b60028a0155610bd1565b600060028a01555b4260038a015560408051858152602081018c905233917fb605f60b5ff13848ba5a9234329676801d97e41362092b50014cad41fb2b7bfc910160405180910390a250505050505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314610c9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b610ca76123e8565b610caf61246c565b6040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8b9190612c07565b905090565b610d986124e9565b73ffffffffffffffffffffffffffffffffffffffff8116610e15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f43616e6e6f74206265207a65726f206164647265737300000000000000000000604482015260640161060e565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c906020016106db565b60035473ffffffffffffffffffffffffffffffffffffffff163314610f09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b6107d0811115610f9b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f706572666f726d616e63654665652063616e6e6f74206265206d6f726520746860448201527f616e204d41585f504552464f524d414e43455f46454500000000000000000000606482015260840161060e565b60068190556040518181527fefeafcf03e479a9566d7ef321b4816de0ba19cfa3cd0fae2f8c5f4a0afb342c4906020016106db565b610fd86124e9565b610fe2600061256a565b565b6040517f1959a002000000000000000000000000000000000000000000000000000000008152306004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690631959a0029060240161012060405180830381865afa158015611074573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110989190612c35565b5050505050505050905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166377c7b8fc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561110f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111339190612c07565b9050670de0b6b3a76400006111488284612b60565b6111529190612b9d565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156111dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112009190612c07565b61120a9190612bef565b9250505090565b600060025460001461124457600254611228610fe4565b61123a90670de0b6b3a7640000612b60565b610d8b9190612b9d565b50670de0b6b3a764000090565b60035473ffffffffffffffffffffffffffffffffffffffff1633146112d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b6112da6125df565b6112e2612664565b6040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b33600090815260016020526040902054610fe2906106e6565b60035473ffffffffffffffffffffffffffffffffffffffff1633146113a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b61271081101561145f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604560248201527f7769746864726177416d6f756e74426f6f737465722063616e6e6f742062652060448201527f6c657373207468616e204d494e5f57495448445241575f414d4f554e545f424f60648201527f4f53544552000000000000000000000000000000000000000000000000000000608482015260a40161060e565b61271a811115611517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604560248201527f7769746864726177416d6f756e74426f6f737465722063616e6e6f742062652060448201527f6d6f7265207468616e204d41585f57495448445241575f414d4f554e545f424f60648201527f4f53544552000000000000000000000000000000000000000000000000000000608482015260a40161060e565b60058190556040518181527f6029d76ffeb0d7684607fa1164412e907a5fcb0849976856b2f98f0ae49fb457906020016106db565b60035473ffffffffffffffffffffffffffffffffffffffff1633146115cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b6101f481111561165f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f77697468647261774665652063616e6e6f74206265206d6f7265207468616e2060448201527f4d41585f57495448445241575f46454500000000000000000000000000000000606482015260840161060e565b60078190556040518181527fd5fe46099fa396290a7f57e36c3c3c8774e2562c18ed5d1dcc0fa75071e03f1d906020016106db565b61169c6125df565b60045474010000000000000000000000000000000000000000900460ff16611720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f7420616c6c6f77656420746f207374616b65000000000000000000000000604482015260640161060e565b6509184e72a00081116117b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4465706f73697420616d6f756e74206d7573742062652067726561746572207460448201527f68616e204d494e5f4445504f5349545f414d4f554e5400000000000000000000606482015260840161060e565b33600090815260016020526040812080549091908190819015611a165760006002546117df610fe4565b86546117eb9190612b60565b6117f59190612b9d565b905060008560020154826118099190612bd8565b90506127106006548261181c9190612b60565b6118269190612b9d565b93508315611a1357611836610fe4565b6002546118439086612b60565b61184d9190612b9d565b9250828660000160008282546118639190612bd8565b92505081905550826002600082825461187c9190612bd8565b90915550508387106118915760019450611a13565b60006509184e72a00085106118a657846118ae565b6509184e72a0005b9050612710600554826118c19190612b60565b6118cb9190612b9d565b6040517f5521e9bf000000000000000000000000000000000000000000000000000000008152600481018290529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635521e9bf90602401600060405180830381600087803b15801561195657600080fd5b505af115801561196a573d6000803e3d6000fd5b5050505084611977610cda565b101561198a57611985610cda565b61198c565b845b6004549095506119d69073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911687612392565b604080518681526020810186905233917fba099d38a7da8262f6dc89809a028ddb51ce1f8fe4d9c7554ef909078f6e10c9910160405180910390a2505b50505b6000611a20610fe4565b9050611a6473ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163330896126d3565b8315611af957600454611ab19073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911685612392565b604080518481526020810184905233917fba099d38a7da8262f6dc89809a028ddb51ce1f8fe4d9c7554ef909078f6e10c9910160405180910390a2611af68382612bd8565b90505b6000600254600014611b25578160025488611b149190612b60565b611b1e9190612b9d565b9050611b28565b50855b80866000016000828254611b3c9190612bef565b909155505042600187015560028054829190600090611b5c908490612bef565b90915550611b6a9050612731565b600254611b75610fe4565b8754611b819190612b60565b611b8b9190612b9d565b6002870155426003870181905560408051898152602081018490529081019190915233907f269e310e936abd6c2408df165913683c9c53eef830fe562f699fd50c3b860c069060600160405180910390a250505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314611c66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b60045474010000000000000000000000000000000000000000900460ff16611cea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f207374616b696e672063616b650000000000000000000000000000000000604482015260640161060e565b600480547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff168155604080517f853828b6000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263853828b69280820192600092909182900301818387803b158015611d9757600080fd5b505af1158015611dab573d6000803e3d6000fd5b50505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314611e32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611f0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f546f6b656e2063616e6e6f742062652073616d65206173206465706f7369742060448201527f746f6b656e000000000000000000000000000000000000000000000000000000606482015260840161060e565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9e9190612c07565b9050611fc173ffffffffffffffffffffffffffffffffffffffff83163383612392565b5050565b611fcd6124e9565b73ffffffffffffffffffffffffffffffffffffffff811661204a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f43616e6e6f74206265207a65726f206164647265737300000000000000000000604482015260640161060e565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fafa147634b29e2c7bd53ce194256b9f41cfb9ba3036f2b822fdd1d965beea086906020016106db565b6120c56124e9565b73ffffffffffffffffffffffffffffffffffffffff8116612168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161060e565b6121718161256a565b50565b80158061221457506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156121ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122129190612c07565b155b6122a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161060e565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526123749084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526127ed565b505050565b606061238884846000856128f9565b90505b9392505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526123749084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016122f2565b60005474010000000000000000000000000000000000000000900460ff16610fe2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161060e565b6124746123e8565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b60005473ffffffffffffffffffffffffffffffffffffffff163314610fe2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161060e565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005474010000000000000000000000000000000000000000900460ff1615610fe2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161060e565b61266c6125df565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586124bf3390565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052611dab9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016122f2565b600061273b610cda565b90508015612171576040517fe2bbb15800000000000000000000000000000000000000000000000000000000815260048101829052600060248201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e2bbb15890604401600060405180830381600087803b1580156127d257600080fd5b505af11580156127e6573d6000803e3d6000fd5b5050505050565b600061284f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166123799092919063ffffffff16565b805190915015612374578080602001905181019061286d9190612ca5565b612374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161060e565b60608247101561298b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161060e565b73ffffffffffffffffffffffffffffffffffffffff85163b612a09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161060e565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612a329190612cec565b60006040518083038185875af1925050503d8060008114612a6f576040519150601f19603f3d011682016040523d82523d6000602084013e612a74565b606091505b5091509150612a84828286612a8f565b979650505050505050565b60608315612a9e57508161238b565b825115612aae5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e9190612d08565b600060208284031215612af457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461238b57600080fd5b600060208284031215612b2a57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b9857612b98612b31565b500290565b600082612bd3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082821015612bea57612bea612b31565b500390565b60008219821115612c0257612c02612b31565b500190565b600060208284031215612c1957600080fd5b5051919050565b80518015158114612c3057600080fd5b919050565b60008060008060008060008060006101208a8c031215612c5457600080fd5b8951985060208a0151975060408a0151965060608a0151955060808a0151945060a08a0151935060c08a01519250612c8e60e08b01612c20565b91506101008a015190509295985092959850929598565b600060208284031215612cb757600080fd5b61238b82612c20565b60005b83811015612cdb578181015183820152602001612cc3565b83811115611dab5750506000910152565b60008251612cfe818460208701612cc0565b9190910192915050565b6020815260008251806020840152612d27816040850160208701612cc0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212208554ebb424f8f8a2b019fb506b26a26ea986a3eee382654a28895bd4d5c3de0264736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102925760003560e01c8063853828b611610160578063d4b0de2f116100d8578063ed64a9671161008c578063f2fde38b11610071578063f2fde38b14610537578063f851a4401461054a578063fc0c546a1461056a57600080fd5b8063ed64a967146104fd578063f0f442601461052457600080fd5b8063def68a9c116100bd578063def68a9c146104d8578063df10b4e6146104eb578063e941fa78146104f457600080fd5b8063d4b0de2f146104c7578063db2e21bc146104d057600080fd5b80638dd313661161012f578063b6ac642a11610114578063b6ac642a14610498578063b6b55f25146104ab578063bdca9165146104be57600080fd5b80638dd3136614610485578063b68578441461030957600080fd5b8063853828b61461044d57806387788782146104555780638a180eea1461045e5780638da5cb5b1461046757600080fd5b80634cf088d91161020e578063715018a6116101c257806377c7b8fc116101a757806377c7b8fc1461043457806382dba6421461043c5780638456cb591461044557600080fd5b8063715018a614610424578063722713f71461042c57600080fd5b806361d027b3116101f357806361d027b3146103b9578063704b6c02146103fe57806370897b231461041157600080fd5b80634cf088d9146103615780635c975abb1461039657600080fd5b80632cfc5f01116102655780633a98ef391161024a5780633a98ef39146103485780633f4ba83a1461035157806348a0d7541461035957600080fd5b80632cfc5f011461032b5780632e1a7d4d1461033557600080fd5b806314c9253e146102975780631959a002146102b35780631ea30fef146103095780631efac1b814610316575b600080fd5b6102a060055481565b6040519081526020015b60405180910390f35b6102e96102c1366004612ae2565b6001602081905260009182526040909120805491810154600282015460039092015490919084565b6040805194855260208501939093529183015260608201526080016102aa565b6102a06509184e72a00081565b610329610324366004612b18565b610591565b005b6102a062093a8081565b610329610343366004612b18565b6106e6565b6102a060025481565b610329610c1e565b6102a0610cda565b6004546103869074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016102aa565b60005474010000000000000000000000000000000000000000900460ff16610386565b6004546103d99073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102aa565b61032961040c366004612ae2565b610d90565b61032961041f366004612b18565b610e88565b610329610fd0565b6102a0610fe4565b6102a0611211565b6102a061271081565b610329611251565b61032961130d565b6102a060065481565b6102a061271a81565b60005473ffffffffffffffffffffffffffffffffffffffff166103d9565b610329610493366004612b18565b611326565b6103296104a6366004612b18565b61154c565b6103296104b9366004612b18565b611694565b6102a06107d081565b6102a06101f481565b610329611be5565b6103296104e6366004612ae2565b611db1565b6102a060085481565b6102a060075481565b6103d97f000000000000000000000000000000000000000000000000000000000000000081565b610329610532366004612ae2565b611fc5565b610329610545366004612ae2565b6120bd565b6003546103d99073ffffffffffffffffffffffffffffffffffffffff1681565b6103d97f000000000000000000000000000000000000000000000000000000000000000081565b60035473ffffffffffffffffffffffffffffffffffffffff163314610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f00000000000000000000000000000000000000000060448201526064015b60405180910390fd5b62093a808111156106aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f7769746864726177466565506572696f642063616e6e6f74206265206d6f726560448201527f207468616e204d41585f57495448445241575f4645455f504552494f44000000606482015260840161060e565b60088190556040518181527fb89ddaddb7435be26824cb48d2d0186c9525a2e1ec057abcb502704cdc0686cc906020015b60405180910390a150565b3360009081526001602052604090208161075c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f7468696e6720746f20776974686472617700000000000000000000000000604482015260640161060e565b80548211156107c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f576974686472617720616d6f756e7420657863656564732062616c616e636500604482015260640161060e565b60006002546107d4610fe4565b83546107e09190612b60565b6107ea9190612b9d565b905060008260020154826107fe9190612bd8565b9050600080821561087a576127106006548461081a9190612b60565b6108249190612b9d565b915061082e610fe4565b60025461083b9084612b60565b6108459190612b9d565b90508085600001600082825461085b9190612bd8565b9250508190555080600260008282546108749190612bd8565b90915550505b845486111561088857845495505b600060025483610896610fe4565b6108a09190612bd8565b6108aa9089612b60565b6108b49190612b9d565b9050868660000160008282546108ca9190612bd8565b9250508190555086600260008282546108e39190612bd8565b90915550600090506108f58483612bef565b60045490915074010000000000000000000000000000000000000000900460ff16156109f7576509184e72a000811061092e5780610936565b6509184e72a0005b9050612710600554826109499190612b60565b6109539190612b9d565b6040517f5521e9bf000000000000000000000000000000000000000000000000000000008152600481018290529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635521e9bf90602401600060405180830381600087803b1580156109de57600080fd5b505af11580156109f2573d6000803e3d6000fd5b505050505b60006008548860010154610a0b9190612bef565b421015610a3c5761271060075484610a239190612b60565b610a2d9190612b9d565b9050610a398184612bd8565b92505b6000610a488287612bef565b90508015610b365780610a59610cda565b1015610a6c57610a67610cda565b610a6e565b805b600454909150610ab89073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683612392565b8515610afa57604080518781526020810187905233917fba099d38a7da8262f6dc89809a028ddb51ce1f8fe4d9c7554ef909078f6e10c9910160405180910390a25b8115610b365760405182815233907ff4451cbaeb1fedd1db1eed585be4980b066afa1fa1c2a59f361ca67191e9695a9060200160405180910390a25b83610b3f610cda565b1015610b5257610b4d610cda565b610b54565b835b9350610b9773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163386612392565b885415610bc957600254610ba9610fe4565b8a54610bb59190612b60565b610bbf9190612b9d565b60028a0155610bd1565b600060028a01555b4260038a015560408051858152602081018c905233917fb605f60b5ff13848ba5a9234329676801d97e41362092b50014cad41fb2b7bfc910160405180910390a250505050505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314610c9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b610ca76123e8565b610caf61246c565b6040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8b9190612c07565b905090565b610d986124e9565b73ffffffffffffffffffffffffffffffffffffffff8116610e15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f43616e6e6f74206265207a65726f206164647265737300000000000000000000604482015260640161060e565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c906020016106db565b60035473ffffffffffffffffffffffffffffffffffffffff163314610f09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b6107d0811115610f9b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f706572666f726d616e63654665652063616e6e6f74206265206d6f726520746860448201527f616e204d41585f504552464f524d414e43455f46454500000000000000000000606482015260840161060e565b60068190556040518181527fefeafcf03e479a9566d7ef321b4816de0ba19cfa3cd0fae2f8c5f4a0afb342c4906020016106db565b610fd86124e9565b610fe2600061256a565b565b6040517f1959a002000000000000000000000000000000000000000000000000000000008152306004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690631959a0029060240161012060405180830381865afa158015611074573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110989190612c35565b5050505050505050905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166377c7b8fc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561110f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111339190612c07565b9050670de0b6b3a76400006111488284612b60565b6111529190612b9d565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156111dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112009190612c07565b61120a9190612bef565b9250505090565b600060025460001461124457600254611228610fe4565b61123a90670de0b6b3a7640000612b60565b610d8b9190612b9d565b50670de0b6b3a764000090565b60035473ffffffffffffffffffffffffffffffffffffffff1633146112d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b6112da6125df565b6112e2612664565b6040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b33600090815260016020526040902054610fe2906106e6565b60035473ffffffffffffffffffffffffffffffffffffffff1633146113a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b61271081101561145f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604560248201527f7769746864726177416d6f756e74426f6f737465722063616e6e6f742062652060448201527f6c657373207468616e204d494e5f57495448445241575f414d4f554e545f424f60648201527f4f53544552000000000000000000000000000000000000000000000000000000608482015260a40161060e565b61271a811115611517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604560248201527f7769746864726177416d6f756e74426f6f737465722063616e6e6f742062652060448201527f6d6f7265207468616e204d41585f57495448445241575f414d4f554e545f424f60648201527f4f53544552000000000000000000000000000000000000000000000000000000608482015260a40161060e565b60058190556040518181527f6029d76ffeb0d7684607fa1164412e907a5fcb0849976856b2f98f0ae49fb457906020016106db565b60035473ffffffffffffffffffffffffffffffffffffffff1633146115cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b6101f481111561165f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f77697468647261774665652063616e6e6f74206265206d6f7265207468616e2060448201527f4d41585f57495448445241575f46454500000000000000000000000000000000606482015260840161060e565b60078190556040518181527fd5fe46099fa396290a7f57e36c3c3c8774e2562c18ed5d1dcc0fa75071e03f1d906020016106db565b61169c6125df565b60045474010000000000000000000000000000000000000000900460ff16611720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f7420616c6c6f77656420746f207374616b65000000000000000000000000604482015260640161060e565b6509184e72a00081116117b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4465706f73697420616d6f756e74206d7573742062652067726561746572207460448201527f68616e204d494e5f4445504f5349545f414d4f554e5400000000000000000000606482015260840161060e565b33600090815260016020526040812080549091908190819015611a165760006002546117df610fe4565b86546117eb9190612b60565b6117f59190612b9d565b905060008560020154826118099190612bd8565b90506127106006548261181c9190612b60565b6118269190612b9d565b93508315611a1357611836610fe4565b6002546118439086612b60565b61184d9190612b9d565b9250828660000160008282546118639190612bd8565b92505081905550826002600082825461187c9190612bd8565b90915550508387106118915760019450611a13565b60006509184e72a00085106118a657846118ae565b6509184e72a0005b9050612710600554826118c19190612b60565b6118cb9190612b9d565b6040517f5521e9bf000000000000000000000000000000000000000000000000000000008152600481018290529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635521e9bf90602401600060405180830381600087803b15801561195657600080fd5b505af115801561196a573d6000803e3d6000fd5b5050505084611977610cda565b101561198a57611985610cda565b61198c565b845b6004549095506119d69073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911687612392565b604080518681526020810186905233917fba099d38a7da8262f6dc89809a028ddb51ce1f8fe4d9c7554ef909078f6e10c9910160405180910390a2505b50505b6000611a20610fe4565b9050611a6473ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163330896126d3565b8315611af957600454611ab19073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911685612392565b604080518481526020810184905233917fba099d38a7da8262f6dc89809a028ddb51ce1f8fe4d9c7554ef909078f6e10c9910160405180910390a2611af68382612bd8565b90505b6000600254600014611b25578160025488611b149190612b60565b611b1e9190612b9d565b9050611b28565b50855b80866000016000828254611b3c9190612bef565b909155505042600187015560028054829190600090611b5c908490612bef565b90915550611b6a9050612731565b600254611b75610fe4565b8754611b819190612b60565b611b8b9190612b9d565b6002870155426003870181905560408051898152602081018490529081019190915233907f269e310e936abd6c2408df165913683c9c53eef830fe562f699fd50c3b860c069060600160405180910390a250505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314611c66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b60045474010000000000000000000000000000000000000000900460ff16611cea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f207374616b696e672063616b650000000000000000000000000000000000604482015260640161060e565b600480547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff168155604080517f853828b6000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263853828b69280820192600092909182900301818387803b158015611d9757600080fd5b505af1158015611dab573d6000803e3d6000fd5b50505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314611e32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f61646d696e3a207775743f000000000000000000000000000000000000000000604482015260640161060e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611f0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f546f6b656e2063616e6e6f742062652073616d65206173206465706f7369742060448201527f746f6b656e000000000000000000000000000000000000000000000000000000606482015260840161060e565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9e9190612c07565b9050611fc173ffffffffffffffffffffffffffffffffffffffff83163383612392565b5050565b611fcd6124e9565b73ffffffffffffffffffffffffffffffffffffffff811661204a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f43616e6e6f74206265207a65726f206164647265737300000000000000000000604482015260640161060e565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fafa147634b29e2c7bd53ce194256b9f41cfb9ba3036f2b822fdd1d965beea086906020016106db565b6120c56124e9565b73ffffffffffffffffffffffffffffffffffffffff8116612168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161060e565b6121718161256a565b50565b80158061221457506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156121ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122129190612c07565b155b6122a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161060e565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526123749084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526127ed565b505050565b606061238884846000856128f9565b90505b9392505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526123749084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016122f2565b60005474010000000000000000000000000000000000000000900460ff16610fe2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161060e565b6124746123e8565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b60005473ffffffffffffffffffffffffffffffffffffffff163314610fe2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161060e565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005474010000000000000000000000000000000000000000900460ff1615610fe2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161060e565b61266c6125df565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586124bf3390565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052611dab9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016122f2565b600061273b610cda565b90508015612171576040517fe2bbb15800000000000000000000000000000000000000000000000000000000815260048101829052600060248201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e2bbb15890604401600060405180830381600087803b1580156127d257600080fd5b505af11580156127e6573d6000803e3d6000fd5b5050505050565b600061284f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166123799092919063ffffffff16565b805190915015612374578080602001905181019061286d9190612ca5565b612374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161060e565b60608247101561298b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161060e565b73ffffffffffffffffffffffffffffffffffffffff85163b612a09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161060e565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612a329190612cec565b60006040518083038185875af1925050503d8060008114612a6f576040519150601f19603f3d011682016040523d82523d6000602084013e612a74565b606091505b5091509150612a84828286612a8f565b979650505050505050565b60608315612a9e57508161238b565b825115612aae5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e9190612d08565b600060208284031215612af457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461238b57600080fd5b600060208284031215612b2a57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b9857612b98612b31565b500290565b600082612bd3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082821015612bea57612bea612b31565b500390565b60008219821115612c0257612c02612b31565b500190565b600060208284031215612c1957600080fd5b5051919050565b80518015158114612c3057600080fd5b919050565b60008060008060008060008060006101208a8c031215612c5457600080fd5b8951985060208a0151975060408a0151965060608a0151955060808a0151945060a08a0151935060c08a01519250612c8e60e08b01612c20565b91506101008a015190509295985092959850929598565b600060208284031215612cb757600080fd5b61238b82612c20565b60005b83811015612cdb578181015183820152602001612cc3565b83811115611dab5750506000910152565b60008251612cfe818460208701612cc0565b9190910192915050565b6020815260008251806020840152612d27816040850160208701612cc0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212208554ebb424f8f8a2b019fb506b26a26ea986a3eee382654a28895bd4d5c3de0264736f6c634300080d0033",
  "immutableReferences": {
    "958": [
      {
        "length": 32,
        "start": 1391
      },
      {
        "length": 32,
        "start": 2703
      },
      {
        "length": 32,
        "start": 2928
      },
      {
        "length": 32,
        "start": 3339
      },
      {
        "length": 32,
        "start": 4480
      },
      {
        "length": 32,
        "start": 6573
      },
      {
        "length": 32,
        "start": 6716
      },
      {
        "length": 32,
        "start": 6792
      },
      {
        "length": 32,
        "start": 7732
      }
    ],
    "961": [
      {
        "length": 32,
        "start": 1282
      },
      {
        "length": 32,
        "start": 2437
      },
      {
        "length": 32,
        "start": 4140
      },
      {
        "length": 32,
        "start": 4262
      },
      {
        "length": 32,
        "start": 6397
      },
      {
        "length": 32,
        "start": 7506
      },
      {
        "length": 32,
        "start": 10105
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4466:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:86:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "131:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "140:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "143:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "133:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "133:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "133:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "90:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "101:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "116:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "121:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "125:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "97:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "97:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "87:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "87:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "80:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "80:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "77:70:9"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "56:5:9",
                "type": ""
              }
            ],
            "src": "14:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "322:554:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "369:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "378:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "381:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "371:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "371:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "371:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "343:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "352:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "339:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "339:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "364:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "335:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "335:33:9"
                  },
                  "nodeType": "YulIf",
                  "src": "332:53:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "394:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "413:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "407:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "407:16:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "398:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "465:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "432:32:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "432:39:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "432:39:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "480:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "490:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "480:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "504:40:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "529:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "540:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "525:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "525:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "519:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:25:9"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "508:7:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "586:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "553:32:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "553:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "553:41:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "603:17:9",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "613:7:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "603:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "629:40:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "654:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "665:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "650:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "650:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "644:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:25:9"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "633:7:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "711:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "678:32:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "678:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "678:41:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "728:17:9",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "738:7:9"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "728:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "754:40:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "779:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "790:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "775:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "775:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:25:9"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "758:7:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "836:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "803:32:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "803:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "803:41:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "853:17:9",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "863:7:9"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "853:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$298t_contract$_ICakePool_$2109t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "264:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "275:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "287:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "295:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "303:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "311:6:9",
                "type": ""
              }
            ],
            "src": "158:718:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1010:175:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1020:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1032:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1043:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1028:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1028:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1020:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1055:29:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1073:3:9",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1078:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1069:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1069:11:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1082:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1065:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1065:19:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1059:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1100:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1115:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1123:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1111:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1111:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1093:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1093:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1093:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1147:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1158:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1143:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1143:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1167:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1175:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1163:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1163:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1136:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1136:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1136:43:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "971:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "982:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "990:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1001:4:9",
                "type": ""
              }
            ],
            "src": "881:304:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1271:103:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1317:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1326:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1329:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1319:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1319:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1319:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1292:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1301:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1288:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1313:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1284:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1284:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1281:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1342:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1358:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1352:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1352:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1342:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1237:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1248:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1260:6:9",
                "type": ""
              }
            ],
            "src": "1190:184:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1553:244:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1570:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1581:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1563:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1563:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1563:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1604:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1615:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1600:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1600:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1620:2:9",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1593:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1593:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1593:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1643:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1654:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1639:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1639:18:9"
                      },
                      {
                        "hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1659:34:9",
                        "type": "",
                        "value": "SafeERC20: approve from non-zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1632:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1632:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1632:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1714:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1725:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1710:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1710:18:9"
                      },
                      {
                        "hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1730:24:9",
                        "type": "",
                        "value": " to non-zero allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1703:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1703:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1703:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1764:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1776:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1787:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1772:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1772:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1764:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1530:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1544:4:9",
                "type": ""
              }
            ],
            "src": "1379:418:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1931:145:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1941:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1953:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1964:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1949:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1941:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1983:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1998:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2014:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2019:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2010:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2010:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2023:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2006:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2006:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1994:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1994:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1976:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1976:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1976:51:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2047:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2058:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2043:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2043:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2063:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2036:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2036:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2036:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1892:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1903:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1911:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1922:4:9",
                "type": ""
              }
            ],
            "src": "1802:274:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2159:199:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2205:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2214:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2217:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2207:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2207:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2207:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2180:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2189:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2176:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2176:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2201:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2172:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2172:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2169:52:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2230:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2249:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2243:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2243:16:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2234:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2312:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2321:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2324:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2314:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2314:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2314:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2281:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2302:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2295:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2295:13:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2288:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2288:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2278:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2278:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2271:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2271:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2268:60:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2337:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2347:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2337:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2125:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2136:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2148:6:9",
                "type": ""
              }
            ],
            "src": "2081:277:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2537:232:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2554:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2565:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2547:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2547:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2547:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2588:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2599:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2584:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2584:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2604:2:9",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2577:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2577:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2577:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2627:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2638:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2623:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2623:18:9"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2643:34:9",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2616:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2616:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2616:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2698:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2709:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2694:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2694:18:9"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2714:12:9",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2687:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2687:40:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2687:40:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2736:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2748:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2759:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2744:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2744:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2736:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2514:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2528:4:9",
                "type": ""
              }
            ],
            "src": "2363:406:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2948:228:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2965:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2976:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2958:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2958:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2958:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2999:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3010:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2995:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2995:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3015:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2988:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2988:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2988:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3038:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3049:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3034:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3034:18:9"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3054:34:9",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3027:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3027:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3027:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3109:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3120:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3105:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3105:18:9"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3125:8:9",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3098:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3098:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3098:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3143:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3155:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3166:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3151:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3151:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3143:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2925:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2939:4:9",
                "type": ""
              }
            ],
            "src": "2774:402:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3355:179:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3372:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3383:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3365:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3365:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3365:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3406:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3417:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3402:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3402:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3422:2:9",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3395:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3395:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3395:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3445:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3456:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3441:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3441:18:9"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3461:31:9",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3434:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3434:59:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3434:59:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3502:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3514:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3525:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3510:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3510:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3502:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3332:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3346:4:9",
                "type": ""
              }
            ],
            "src": "3181:353:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3592:205:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3602:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3611:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3606:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3671:63:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3696:3:9"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3701:1:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3692:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3692:11:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3715:3:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3720:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3711:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3711:11:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3705:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3705:18:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3685:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3685:39:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3685:39:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3632:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3635:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3629:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3629:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3643:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3645:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3654:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3657:2:9",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3650:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3650:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3645:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3625:3:9",
                    "statements": []
                  },
                  "src": "3621:113:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3760:31:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3773:3:9"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3778:6:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3769:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3769:16:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3787:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3762:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3762:27:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3762:27:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3749:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3752:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3746:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3746:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3743:48:9"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3570:3:9",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3575:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3580:6:9",
                "type": ""
              }
            ],
            "src": "3539:258:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3939:137:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3949:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3969:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3963:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3963:13:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3953:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4011:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4019:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4007:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4007:17:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4026:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4031:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3985:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3985:53:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3985:53:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4047:23:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4058:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4063:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4054:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4054:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4047:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3915:3:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3920:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3931:3:9",
                "type": ""
              }
            ],
            "src": "3802:274:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4202:262:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4219:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4230:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4212:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4212:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4212:21:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4242:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4262:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4256:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4256:13:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4246:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4289:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4300:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4285:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4285:18:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4305:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4278:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4278:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4278:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4347:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4355:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4343:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4343:15:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4364:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4375:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4360:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4360:18:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4380:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4321:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4321:66:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4321:66:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4396:62:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4412:9:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4431:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4439:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4427:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4427:15:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4448:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4444:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4444:7:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4423:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4423:29:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4408:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4408:45:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4455:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4404:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4404:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4396:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4171:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4182:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4193:4:9",
                "type": ""
              }
            ],
            "src": "4081:383:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$298t_contract$_ICakePool_$2109t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_IERC20(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_contract_IERC20(value_3)\n        value3 := value_3\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"SafeERC20: approve from non-zero\")\n        mstore(add(headStart, 96), \" to non-zero allowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15307:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:9",
                "type": ""
              }
            ],
            "src": "14:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "266:239:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "312:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "321:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "324:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "314:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "314:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "314:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "287:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "296:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "283:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "283:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "308:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "279:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "279:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "276:52:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "337:36:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "363:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "350:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "350:23:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "341:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "459:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "468:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "471:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "461:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "461:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "461:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "395:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "406:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "413:42:9",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "402:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "402:54:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "392:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "392:65:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "385:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:73:9"
                  },
                  "nodeType": "YulIf",
                  "src": "382:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "484:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "494:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "484:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "232:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "243:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "255:6:9",
                "type": ""
              }
            ],
            "src": "196:309:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "695:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "705:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "717:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "728:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "713:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "713:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "705:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "748:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "759:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "741:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "741:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "741:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "797:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "782:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "782:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "802:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "775:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "775:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "775:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "829:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "840:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "825:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "825:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "845:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "818:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "818:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "818:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "872:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "883:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "868:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "868:18:9"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "888:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "861:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "861:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "640:9:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "651:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "659:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "667:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "675:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "686:4:9",
                "type": ""
              }
            ],
            "src": "510:391:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "976:110:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1022:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1031:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1034:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1024:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1024:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1024:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "997:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1006:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1018:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "989:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "989:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "986:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1047:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1070:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1057:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1057:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1047:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "942:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "953:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "965:6:9",
                "type": ""
              }
            ],
            "src": "906:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1186:92:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1196:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1208:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1219:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1204:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1204:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1196:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1238:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1263:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1256:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1256:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1249:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1249:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1231:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1231:41:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1155:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1166:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1177:4:9",
                "type": ""
              }
            ],
            "src": "1091:187:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1384:125:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1394:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1406:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1417:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1402:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1402:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1394:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1436:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1451:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1459:42:9",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1447:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1447:55:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1429:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1429:74:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1429:74:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1353:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1364:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1375:4:9",
                "type": ""
              }
            ],
            "src": "1283:226:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1633:125:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1643:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1655:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1666:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1651:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1651:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1643:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1685:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1700:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1708:42:9",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1696:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1696:55:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1678:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:74:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1678:74:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ICakePool_$2109__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1602:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1613:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1624:4:9",
                "type": ""
              }
            ],
            "src": "1514:244:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1878:125:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1888:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1900:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1911:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1896:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1896:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1888:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1930:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1945:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1953:42:9",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1941:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1941:55:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1923:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1923:74:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1923:74:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$298__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1847:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1858:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1869:4:9",
                "type": ""
              }
            ],
            "src": "1763:240:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2182:161:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2199:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2210:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2192:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2192:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2192:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2233:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2244:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2229:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2229:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2249:2:9",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2222:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2222:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2222:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2272:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2283:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2268:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2268:18:9"
                      },
                      {
                        "hexValue": "61646d696e3a207775743f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2288:13:9",
                        "type": "",
                        "value": "admin: wut?"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2261:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2261:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2261:41:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2311:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2323:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2334:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2319:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2319:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2311:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab213c35f672435e67628857c3c923a20212362eb6524982747a411911be3aa6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2159:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2173:4:9",
                "type": ""
              }
            ],
            "src": "2008:335:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2522:251:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2539:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2550:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2532:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2532:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2532:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2573:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2584:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2569:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2569:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2589:2:9",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2562:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2562:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2562:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2612:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2623:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2608:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2608:18:9"
                      },
                      {
                        "hexValue": "7769746864726177466565506572696f642063616e6e6f74206265206d6f7265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2628:34:9",
                        "type": "",
                        "value": "withdrawFeePeriod cannot be more"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2601:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2601:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2601:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2683:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2694:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2679:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2679:18:9"
                      },
                      {
                        "hexValue": "207468616e204d41585f57495448445241575f4645455f504552494f44",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2699:31:9",
                        "type": "",
                        "value": " than MAX_WITHDRAW_FEE_PERIOD"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2672:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2672:59:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2672:59:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2740:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2752:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2763:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2748:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2748:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2740:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cfca239801295453e18a917561471428326355dcfd35c2679d3e455f8ddb6850__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2499:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2513:4:9",
                "type": ""
              }
            ],
            "src": "2348:425:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2952:169:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2969:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2980:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2962:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2962:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2962:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3003:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3014:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2999:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2999:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3019:2:9",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2992:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2992:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2992:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3042:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3053:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3038:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3038:18:9"
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f207769746864726177",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3058:21:9",
                        "type": "",
                        "value": "Nothing to withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3031:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3031:49:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3031:49:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3089:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3101:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3112:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3097:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3097:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3089:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2929:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2943:4:9",
                "type": ""
              }
            ],
            "src": "2778:343:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3300:181:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3317:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3328:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3310:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3310:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3310:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3351:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3362:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3347:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3347:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3367:2:9",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3340:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3340:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3340:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3390:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3401:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3386:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3386:18:9"
                      },
                      {
                        "hexValue": "576974686472617720616d6f756e7420657863656564732062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3406:33:9",
                        "type": "",
                        "value": "Withdraw amount exceeds balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3379:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3379:61:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3379:61:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3449:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3461:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3472:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3457:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3457:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3449:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3277:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3291:4:9",
                "type": ""
              }
            ],
            "src": "3126:355:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3518:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3535:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3538:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3528:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3528:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3528:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3632:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3635:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3625:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3625:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3625:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3656:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3659:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3649:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3649:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3649:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3486:184:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3727:176:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3846:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3848:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3848:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3848:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3758:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3751:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3751:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3744:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3744:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3766:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3773:66:9",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3841:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "3769:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3769:74:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3763:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3763:81:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3740:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3740:105:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3737:131:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3877:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3892:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3895:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3888:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3888:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3877:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3706:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3709:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3715:7:9",
                "type": ""
              }
            ],
            "src": "3675:228:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3954:228:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3985:168:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4006:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4009:77:9",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3999:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3999:88:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3999:88:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4107:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4110:4:9",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4100:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4100:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4100:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4135:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4138:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4128:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4128:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4128:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3974:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3967:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3967:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3964:189:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4162:14:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4171:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4174:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4167:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4167:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "4162:1:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3939:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3942:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3948:1:9",
                "type": ""
              }
            ],
            "src": "3908:274:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4236:76:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4258:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4260:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4260:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4260:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4252:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4255:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4249:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4249:8:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4246:34:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4289:17:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4301:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4304:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4297:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4297:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4289:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4218:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4221:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4227:4:9",
                "type": ""
              }
            ],
            "src": "4187:125:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4365:80:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4392:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4394:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4394:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4394:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4381:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4388:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4384:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4384:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4378:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4378:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4375:39:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4423:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4434:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4437:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4430:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4430:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4423:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4348:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4351:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4357:3:9",
                "type": ""
              }
            ],
            "src": "4317:128:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4579:119:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4589:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4601:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4612:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4597:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4589:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4631:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4642:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4624:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4624:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4624:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4669:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4680:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4665:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4665:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4685:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4658:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4658:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4658:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4540:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4551:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4559:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4570:4:9",
                "type": ""
              }
            ],
            "src": "4450:248:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4784:103:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4830:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4839:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4842:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4832:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4832:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4832:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4805:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4814:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4801:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4801:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4826:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4797:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4797:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4794:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4855:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4871:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4865:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4865:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4855:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4750:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4761:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4773:6:9",
                "type": ""
              }
            ],
            "src": "4703:184:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5066:172:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5083:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5094:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5076:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5076:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5076:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5117:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5128:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5113:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5113:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5133:2:9",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5106:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5106:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5106:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5156:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5167:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5152:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5152:18:9"
                      },
                      {
                        "hexValue": "43616e6e6f74206265207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5172:24:9",
                        "type": "",
                        "value": "Cannot be zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5145:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5145:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5145:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5206:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5218:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5229:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5214:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5214:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5206:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5043:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5057:4:9",
                "type": ""
              }
            ],
            "src": "4892:346:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5417:244:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5434:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5445:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5427:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5427:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5427:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5468:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5479:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5464:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5464:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5484:2:9",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5457:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5457:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5457:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5507:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5518:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5503:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5503:18:9"
                      },
                      {
                        "hexValue": "706572666f726d616e63654665652063616e6e6f74206265206d6f7265207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5523:34:9",
                        "type": "",
                        "value": "performanceFee cannot be more th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5496:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5496:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5496:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5578:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5589:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5574:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5574:18:9"
                      },
                      {
                        "hexValue": "616e204d41585f504552464f524d414e43455f464545",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5594:24:9",
                        "type": "",
                        "value": "an MAX_PERFORMANCE_FEE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5567:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5567:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5567:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5628:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5640:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5651:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5636:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5636:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5628:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5394:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5408:4:9",
                "type": ""
              }
            ],
            "src": "5243:418:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5723:107:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5733:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5748:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5742:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5742:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5733:5:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5808:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5817:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5820:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5810:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5810:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5810:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5777:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5798:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5791:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5791:13:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5784:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5784:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5774:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5774:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5767:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5767:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5764:60:9"
                }
              ]
            },
            "name": "abi_decode_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5702:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5713:5:9",
                "type": ""
              }
            ],
            "src": "5666:164:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6049:482:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6096:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6105:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6108:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6098:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6098:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6098:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6070:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6079:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6066:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6066:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6091:3:9",
                        "type": "",
                        "value": "288"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6062:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6062:33:9"
                  },
                  "nodeType": "YulIf",
                  "src": "6059:53:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6121:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6137:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6131:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6131:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6121:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6156:35:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6176:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6187:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6172:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6172:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6166:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6166:25:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6156:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6200:35:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6220:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6231:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6216:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6216:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6210:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6210:25:9"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6200:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6244:35:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6264:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6275:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6260:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6260:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6254:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6254:25:9"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "6244:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6288:36:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6308:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6319:3:9",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6304:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6304:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6298:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6298:26:9"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "6288:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6333:36:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6353:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6364:3:9",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6349:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6349:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6343:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6343:26:9"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "6333:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6378:36:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6398:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6409:3:9",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6394:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6394:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6388:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6388:26:9"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "6378:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6423:57:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6464:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6475:3:9",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6460:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6460:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bool_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "6433:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6433:47:9"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "6423:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6489:36:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6509:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6520:3:9",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6505:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6505:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6499:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6499:26:9"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "6489:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_boolt_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5951:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5962:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5974:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5982:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5990:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5998:6:9",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6006:6:9",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "6014:6:9",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "6022:6:9",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "6030:6:9",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "6038:6:9",
                "type": ""
              }
            ],
            "src": "5835:696:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6710:299:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6727:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6738:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6720:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6720:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6720:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6761:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6772:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6757:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6757:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6777:2:9",
                        "type": "",
                        "value": "69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6750:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6750:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6750:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6800:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6811:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6796:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6796:18:9"
                      },
                      {
                        "hexValue": "7769746864726177416d6f756e74426f6f737465722063616e6e6f7420626520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6816:34:9",
                        "type": "",
                        "value": "withdrawAmountBooster cannot be "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6789:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6789:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6789:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6871:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6882:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6867:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6867:18:9"
                      },
                      {
                        "hexValue": "6c657373207468616e204d494e5f57495448445241575f414d4f554e545f424f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6887:34:9",
                        "type": "",
                        "value": "less than MIN_WITHDRAW_AMOUNT_BO"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6860:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6860:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6860:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6942:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6953:3:9",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6938:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6938:19:9"
                      },
                      {
                        "hexValue": "4f53544552",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6959:7:9",
                        "type": "",
                        "value": "OSTER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6931:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6931:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6931:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6976:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6988:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6999:3:9",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6984:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6984:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6976:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f7af6ebade090b850d4ce441cb7a468e96c8f7d31472380f361715f95d0d9e09__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6687:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6701:4:9",
                "type": ""
              }
            ],
            "src": "6536:473:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7188:299:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7205:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7216:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7198:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7198:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7198:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7239:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7250:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7235:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7235:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7255:2:9",
                        "type": "",
                        "value": "69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7228:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7228:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7228:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7278:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7289:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7274:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7274:18:9"
                      },
                      {
                        "hexValue": "7769746864726177416d6f756e74426f6f737465722063616e6e6f7420626520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7294:34:9",
                        "type": "",
                        "value": "withdrawAmountBooster cannot be "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7267:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7267:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7267:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7349:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7360:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7345:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7345:18:9"
                      },
                      {
                        "hexValue": "6d6f7265207468616e204d41585f57495448445241575f414d4f554e545f424f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7365:34:9",
                        "type": "",
                        "value": "more than MAX_WITHDRAW_AMOUNT_BO"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7338:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7338:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7338:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7420:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7431:3:9",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7416:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7416:19:9"
                      },
                      {
                        "hexValue": "4f53544552",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7437:7:9",
                        "type": "",
                        "value": "OSTER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7409:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7409:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7409:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7454:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7466:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7477:3:9",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7462:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7462:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7454:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4da81aa2e0b60257d24bf972b3d3dd147bd4d186f868909df4f9a63ff1cc3d51__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7165:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7179:4:9",
                "type": ""
              }
            ],
            "src": "7014:473:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7666:238:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7683:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7694:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7676:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7676:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7676:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7717:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7728:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7713:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7713:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7733:2:9",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7706:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7706:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7706:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7756:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7767:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7752:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7752:18:9"
                      },
                      {
                        "hexValue": "77697468647261774665652063616e6e6f74206265206d6f7265207468616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7772:34:9",
                        "type": "",
                        "value": "withdrawFee cannot be more than "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7745:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7745:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7745:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7827:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7838:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7823:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7823:18:9"
                      },
                      {
                        "hexValue": "4d41585f57495448445241575f464545",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7843:18:9",
                        "type": "",
                        "value": "MAX_WITHDRAW_FEE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7816:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7816:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7816:46:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7871:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7883:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7894:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7879:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7879:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7871:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7643:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7657:4:9",
                "type": ""
              }
            ],
            "src": "7492:412:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8083:170:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8100:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8111:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8093:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8093:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8093:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8134:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8145:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8130:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8130:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8150:2:9",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8123:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8123:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8123:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8173:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8184:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8169:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8169:18:9"
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420746f207374616b65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8189:22:9",
                        "type": "",
                        "value": "Not allowed to stake"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8162:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8162:50:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8162:50:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8221:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8233:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8244:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8229:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8229:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8221:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_775fbd347d18501cd3f7f66dfe2f71dcc29fc812a8b32e31e373fd76bc75c0ef__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8060:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8074:4:9",
                "type": ""
              }
            ],
            "src": "7909:344:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8432:244:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8449:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8460:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8442:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8442:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8442:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8483:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8494:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8479:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8479:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8499:2:9",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8472:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8472:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8472:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8522:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8533:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8518:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8518:18:9"
                      },
                      {
                        "hexValue": "4465706f73697420616d6f756e74206d75737420626520677265617465722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8538:34:9",
                        "type": "",
                        "value": "Deposit amount must be greater t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8511:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8511:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8511:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8593:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8604:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8589:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8589:18:9"
                      },
                      {
                        "hexValue": "68616e204d494e5f4445504f5349545f414d4f554e54",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8609:24:9",
                        "type": "",
                        "value": "han MIN_DEPOSIT_AMOUNT"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8582:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8582:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8582:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8643:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8655:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8666:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8651:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8651:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8643:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_83154039a634b124bba68b99876328e44211f83ee05a7c9c81da77a2d3756ab4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8409:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8423:4:9",
                "type": ""
              }
            ],
            "src": "8258:418:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8838:162:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8848:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8860:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8871:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8856:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8856:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8848:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8890:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8901:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8883:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8883:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8883:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8928:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8939:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8924:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8924:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8944:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8917:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8917:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8917:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8971:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8982:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8967:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8967:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8987:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8960:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8960:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8960:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8791:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8802:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8810:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8818:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8829:4:9",
                "type": ""
              }
            ],
            "src": "8681:319:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9179:165:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9196:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9207:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9189:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9189:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9189:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9230:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9241:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9226:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9226:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9246:2:9",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9219:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9219:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9219:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9269:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9280:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9265:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9265:18:9"
                      },
                      {
                        "hexValue": "4e6f207374616b696e672063616b65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9285:17:9",
                        "type": "",
                        "value": "No staking cake"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9258:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9258:45:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9258:45:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9312:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9324:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9335:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9320:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9320:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9312:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_62e51dc5329a82cea9705de9975f8b128334b33c5f60e1529757a51e9314dd47__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9156:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9170:4:9",
                "type": ""
              }
            ],
            "src": "9005:339:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9523:227:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9540:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9551:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9533:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9533:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9533:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9574:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9585:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9570:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9570:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9590:2:9",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9563:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9563:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9563:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9613:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9624:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9609:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9609:18:9"
                      },
                      {
                        "hexValue": "546f6b656e2063616e6e6f742062652073616d65206173206465706f73697420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9629:34:9",
                        "type": "",
                        "value": "Token cannot be same as deposit "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9602:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9602:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9602:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9684:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9695:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9680:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9680:18:9"
                      },
                      {
                        "hexValue": "746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9700:7:9",
                        "type": "",
                        "value": "token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9673:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9673:35:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9673:35:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9717:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9729:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9740:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9725:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9725:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9717:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3ea9d2748b0a4cf4d9041ea5447cc8d433bce6ae4e36584bac37b5bb6ca2fc19__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9500:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9514:4:9",
                "type": ""
              }
            ],
            "src": "9349:401:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9929:228:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9946:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9957:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9939:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9939:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9939:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9980:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9991:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9976:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9976:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9996:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9969:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9969:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9969:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10019:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10030:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10015:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10015:18:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10035:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10008:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10008:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10008:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10090:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10101:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10086:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10086:18:9"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10106:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10079:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10079:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10079:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10124:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10136:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10147:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10132:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10132:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10124:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9906:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9920:4:9",
                "type": ""
              }
            ],
            "src": "9755:402:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10291:198:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10301:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10313:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10324:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10309:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10309:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10301:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10336:52:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10346:42:9",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10340:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10404:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10419:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10427:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10415:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10415:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10397:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10397:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10397:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10451:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10462:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10447:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10447:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10471:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10479:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10467:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10467:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10440:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10440:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10440:43:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10252:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10263:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10271:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10282:4:9",
                "type": ""
              }
            ],
            "src": "10162:327:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10668:244:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10685:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10696:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10678:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10678:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10678:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10719:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10730:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10715:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10715:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10735:2:9",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10708:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10708:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10708:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10758:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10769:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10754:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10754:18:9"
                      },
                      {
                        "hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10774:34:9",
                        "type": "",
                        "value": "SafeERC20: approve from non-zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10747:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10747:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10747:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10829:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10840:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10825:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10825:18:9"
                      },
                      {
                        "hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10845:24:9",
                        "type": "",
                        "value": " to non-zero allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10818:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10818:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10818:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10879:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10891:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10902:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10887:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10887:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10879:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10645:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10659:4:9",
                "type": ""
              }
            ],
            "src": "10494:418:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11046:168:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11056:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11068:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11079:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11064:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11064:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11056:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11098:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11113:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11121:42:9",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11109:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11109:55:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11091:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11091:74:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11091:74:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11185:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11196:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11181:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11181:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11201:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11174:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11174:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11174:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11007:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11018:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11026:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11037:4:9",
                "type": ""
              }
            ],
            "src": "10917:297:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11393:170:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11410:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11421:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11403:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11403:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11403:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11444:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11455:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11440:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11440:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11460:2:9",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11433:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11433:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11433:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11483:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11494:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11479:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11479:18:9"
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11499:22:9",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11472:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11472:50:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11472:50:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11531:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11543:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11554:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11539:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11539:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11531:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11370:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11384:4:9",
                "type": ""
              }
            ],
            "src": "11219:344:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11742:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11759:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11770:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11752:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11752:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11752:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11793:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11804:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11789:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11789:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11809:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11782:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11782:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11782:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11832:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11843:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11828:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11828:18:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11848:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11821:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11821:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11821:62:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11892:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11904:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11915:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11900:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11900:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11892:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11719:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11733:4:9",
                "type": ""
              }
            ],
            "src": "11568:356:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12103:166:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12120:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12131:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12113:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12113:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12113:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12154:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12165:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12150:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12150:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12170:2:9",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12143:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12143:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12143:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12193:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12204:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12189:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12189:18:9"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12209:18:9",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12182:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12182:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12182:46:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12237:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12249:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12260:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12245:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12245:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12237:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12080:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12094:4:9",
                "type": ""
              }
            ],
            "src": "11929:340:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12431:241:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12441:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12453:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12464:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12449:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12449:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12441:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12476:52:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12486:42:9",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12480:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12544:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12559:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12567:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12555:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12555:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12537:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12537:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12537:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12591:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12602:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12587:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12587:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "12611:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12619:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12607:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12607:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12580:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12580:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12580:43:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12643:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12654:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12639:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12639:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12659:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12632:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12632:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12632:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12384:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12395:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12403:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12411:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12422:4:9",
                "type": ""
              }
            ],
            "src": "12274:398:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12814:119:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12824:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12836:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12847:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12832:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12832:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12824:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12866:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12877:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12859:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12859:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12859:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12904:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12915:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12900:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12900:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12920:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12893:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12893:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12893:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12775:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12786:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12794:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12805:4:9",
                "type": ""
              }
            ],
            "src": "12677:256:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13016:124:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13062:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13071:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13074:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13064:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13064:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13064:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13037:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13046:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13033:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13033:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13058:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13029:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13029:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "13026:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13087:47:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13124:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bool_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "13097:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13097:37:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13087:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12982:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12993:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13005:6:9",
                "type": ""
              }
            ],
            "src": "12938:202:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13319:232:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13336:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13347:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13329:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13329:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13329:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13370:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13381:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13366:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13366:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13386:2:9",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13359:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13359:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13359:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13409:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13420:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13405:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13405:18:9"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13425:34:9",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13398:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13398:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13398:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13480:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13491:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13476:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13476:18:9"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13496:12:9",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13469:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13469:40:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13469:40:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13518:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13530:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13541:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13526:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13526:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13518:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13296:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13310:4:9",
                "type": ""
              }
            ],
            "src": "13145:406:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13730:228:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13747:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13758:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13740:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13740:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13740:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13781:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13792:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13777:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13777:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13797:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13770:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13770:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13770:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13820:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13831:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13816:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13816:18:9"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13836:34:9",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13809:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13809:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13809:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13891:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13902:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13887:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13887:18:9"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13907:8:9",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13880:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13880:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13880:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13925:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13937:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13948:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13933:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13933:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13925:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13707:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13721:4:9",
                "type": ""
              }
            ],
            "src": "13556:402:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14137:179:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14154:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14165:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14147:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14147:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14147:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14188:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14199:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14184:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14184:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14204:2:9",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14177:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14177:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14177:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14227:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14238:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14223:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14223:18:9"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14243:31:9",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14216:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14216:59:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14216:59:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14284:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14296:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14307:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14292:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14292:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14284:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14114:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14128:4:9",
                "type": ""
              }
            ],
            "src": "13963:353:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14374:205:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14384:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "14393:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "14388:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14453:63:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "14478:3:9"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "14483:1:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14474:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14474:11:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "14497:3:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "14502:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "14493:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14493:11:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "14487:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14487:18:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14467:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14467:39:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14467:39:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14414:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14417:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14411:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14411:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "14425:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14427:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "14436:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14439:2:9",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "14432:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14432:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "14427:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "14407:3:9",
                    "statements": []
                  },
                  "src": "14403:113:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14542:31:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "14555:3:9"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "14560:6:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14551:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14551:16:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14569:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14544:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14544:27:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14544:27:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14531:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14534:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14528:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14528:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "14525:48:9"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "14352:3:9",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "14357:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14362:6:9",
                "type": ""
              }
            ],
            "src": "14321:258:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14721:137:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14731:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14751:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14745:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14745:13:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "14735:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14793:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14801:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14789:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14789:17:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14808:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14813:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "14767:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14767:53:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14767:53:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14829:23:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14840:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14845:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14836:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14836:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14829:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14697:3:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14702:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14713:3:9",
                "type": ""
              }
            ],
            "src": "14584:274:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14984:321:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15001:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15012:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14994:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14994:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14994:21:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15024:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15044:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15038:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15038:13:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "15028:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15071:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15082:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15067:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15067:18:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15087:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15060:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15060:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15060:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15129:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15137:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15125:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15125:15:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15146:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15157:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15142:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15142:18:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15162:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "15103:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15103:66:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15103:66:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15178:121:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15194:9:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15213:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15221:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15209:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15209:15:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15226:66:9",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "15205:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15205:88:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15190:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15190:104:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15296:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15186:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15186:113:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15178:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14953:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14964:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14975:4:9",
                "type": ""
              }
            ],
            "src": "14863:442:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_ICakePool_$2109__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$298__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_ab213c35f672435e67628857c3c923a20212362eb6524982747a411911be3aa6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"admin: wut?\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cfca239801295453e18a917561471428326355dcfd35c2679d3e455f8ddb6850__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"withdrawFeePeriod cannot be more\")\n        mstore(add(headStart, 96), \" than MAX_WITHDRAW_FEE_PERIOD\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Nothing to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Withdraw amount exceeds balance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cannot be zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"performanceFee cannot be more th\")\n        mstore(add(headStart, 96), \"an MAX_PERFORMANCE_FEE\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n        value6 := mload(add(headStart, 192))\n        value7 := abi_decode_bool_fromMemory(add(headStart, 224))\n        value8 := mload(add(headStart, 256))\n    }\n    function abi_encode_tuple_t_stringliteral_f7af6ebade090b850d4ce441cb7a468e96c8f7d31472380f361715f95d0d9e09__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 69)\n        mstore(add(headStart, 64), \"withdrawAmountBooster cannot be \")\n        mstore(add(headStart, 96), \"less than MIN_WITHDRAW_AMOUNT_BO\")\n        mstore(add(headStart, 128), \"OSTER\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_4da81aa2e0b60257d24bf972b3d3dd147bd4d186f868909df4f9a63ff1cc3d51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 69)\n        mstore(add(headStart, 64), \"withdrawAmountBooster cannot be \")\n        mstore(add(headStart, 96), \"more than MAX_WITHDRAW_AMOUNT_BO\")\n        mstore(add(headStart, 128), \"OSTER\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"withdrawFee cannot be more than \")\n        mstore(add(headStart, 96), \"MAX_WITHDRAW_FEE\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_775fbd347d18501cd3f7f66dfe2f71dcc29fc812a8b32e31e373fd76bc75c0ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Not allowed to stake\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_83154039a634b124bba68b99876328e44211f83ee05a7c9c81da77a2d3756ab4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Deposit amount must be greater t\")\n        mstore(add(headStart, 96), \"han MIN_DEPOSIT_AMOUNT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_62e51dc5329a82cea9705de9975f8b128334b33c5f60e1529757a51e9314dd47__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"No staking cake\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3ea9d2748b0a4cf4d9041ea5447cc8d433bce6ae4e36584bac37b5bb6ca2fc19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Token cannot be same as deposit \")\n        mstore(add(headStart, 96), \"token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"SafeERC20: approve from non-zero\")\n        mstore(add(headStart, 96), \" to non-zero allowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "278:13503:7:-:0;;;936:26;;;-1:-1:-1;;;;936:26:7;-1:-1:-1;;;936:26:7;;;1581:5;1542:44;;1633:3;1601:35;;1676:2;1647:31;;1726:8;1691:43;;2702:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:6;936:18:0;:32::i;:::-;1006:5:1;996:15;;-1:-1:-1;;;;996:15:1;;;-1:-1:-1;;;;;2817:14:7;;;;;;;2838:20;;;;;2865:5;:14;;-1:-1:-1;;;;;;2865:14:7;;;;;;;;;;2886:8;:20;;;;;;;;;;;;;;;2940:65;;2838:20;-1:-1:-1;;2940:26:7;;;;;;;:65;;:::i;:::-;2702:309;;;;278:13503;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1475:603:4:-;1830:10;;;1829:62;;-1:-1:-1;1846:39:4;;-1:-1:-1;;;1846:39:4;;1870:4;1846:39;;;1093:34:9;-1:-1:-1;;;;;1163:15:9;;;1143:18;;;1136:43;1846:15:4;;;;;1028:18:9;;1846:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;-1:-1:-1;;;1808:163:4;;1581:2:9;1808:163:4;;;1563:21:9;1620:2;1600:18;;;1593:30;1659:34;1639:18;;;1632:62;1730:24;1710:18;;;1703:52;1772:19;;1808:163:4;;;;;;;;;2008:62;;;-1:-1:-1;;;;;1994:32:9;;2008:62:4;;;1976:51:9;2043:18;;;;2036:34;;;2008:62:4;;;;;;;;;;1949:18:9;;;;2008:62:4;;;;;;;;-1:-1:-1;;;;;2008:62:4;;;-1:-1:-1;;;2008:62:4;;;;1981:90;;2001:5;;1981:19;:90;:::i;:::-;1475:603;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:4;;;;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:4;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:4;;2565:2:9;4351:85:4;;;2547:21:9;2604:2;2584:18;;;2577:30;2643:34;2623:18;;;2616:62;-1:-1:-1;;;2694:18:9;;;2687:40;2744:19;;4351:85:4;2363:406:9;3861:223:5;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:5;;2976:2:9;5137:81:5;;;2958:21:9;3015:2;2995:18;;;2988:30;3054:34;3034:18;;;3027:62;-1:-1:-1;;;3105:18:9;;;3098:36;3151:19;;5137:81:5;2774:402:9;5137:81:5;-1:-1:-1;;;;;1465:19:5;;;5228:60;;;;-1:-1:-1;;;5228:60:5;;3383:2:9;5228:60:5;;;3365:21:9;3422:2;3402:18;;;3395:30;3461:31;3441:18;;;3434:59;3510:18;;5228:60:5;3181:353:9;5228:60:5;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:5;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5299:73:5;;-1:-1:-1;5299:73:5;-1:-1:-1;5389:51:5;5299:73;;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:5:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:5;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:5;;;;;;;;:::i;14:139:9:-;-1:-1:-1;;;;;97:31:9;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:718::-;287:6;295;303;311;364:3;352:9;343:7;339:23;335:33;332:53;;;381:1;378;371:12;332:53;413:9;407:16;432:39;465:5;432:39;:::i;:::-;540:2;525:18;;519:25;490:5;;-1:-1:-1;553:41:9;519:25;553:41;:::i;:::-;665:2;650:18;;644:25;613:7;;-1:-1:-1;678:41:9;644:25;678:41;:::i;:::-;790:2;775:18;;769:25;738:7;;-1:-1:-1;803:41:9;769:25;803:41;:::i;:::-;158:718;;;;-1:-1:-1;158:718:9;;-1:-1:-1;;158:718:9:o;1190:184::-;1260:6;1313:2;1301:9;1292:7;1288:23;1284:32;1281:52;;;1329:1;1326;1319:12;1281:52;-1:-1:-1;1352:16:9;;1190:184;-1:-1:-1;1190:184:9:o;2081:277::-;2148:6;2201:2;2189:9;2180:7;2176:23;2172:32;2169:52;;;2217:1;2214;2207:12;2169:52;2249:9;2243:16;2302:5;2295:13;2288:21;2281:5;2278:32;2268:60;;2324:1;2321;2314:12;3539:258;3611:1;3621:113;3635:6;3632:1;3629:13;3621:113;;;3711:11;;;3705:18;3692:11;;;3685:39;3657:2;3650:10;3621:113;;;3752:6;3749:1;3746:13;3743:48;;;3787:1;3778:6;3773:3;3769:16;3762:27;3743:48;;3539:258;;;:::o;3802:274::-;3931:3;3969:6;3963:13;3985:53;4031:6;4026:3;4019:4;4011:6;4007:17;3985:53;:::i;:::-;4054:16;;;;;3802:274;-1:-1:-1;;3802:274:9:o;4081:383::-;4230:2;4219:9;4212:21;4193:4;4262:6;4256:13;4305:6;4300:2;4289:9;4285:18;4278:34;4321:66;4380:6;4375:2;4364:9;4360:18;4355:2;4347:6;4343:15;4321:66;:::i;:::-;4448:2;4427:15;-1:-1:-1;;4423:29:9;4408:45;;;;4455:2;4404:54;;4081:383;-1:-1:-1;;4081:383:9:o;:::-;278:13503:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "278:13503:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1542:44;;;;;;;;;160:25:9;;;148:2;133:18;1542:44:7;;;;;;;;801;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;741:25:9;;;797:2;782:18;;775:34;;;;825:18;;;818:34;883:2;868:18;;861:34;728:3;713:19;801:44:7;510:391:9;1233:58:7;;1278:13;1233:58;;10651:326;;;;;;:::i;:::-;;:::i;:::-;;1088:57;;1138:7;1088:57;;6246:2826;;;;;;:::i;:::-;;:::i;852:26::-;;;;;;12596:93;;;:::i;13039:101::-;;;:::i;936:26::-;;;;;;;;;;;;;;;1256:14:9;;1249:22;1231:41;;1219:2;1204:18;936:26:7;1091:187:9;1615:84:1;1662:4;1685:7;;;;;;1615:84;;908:23:7;;;;;;;;;;;;1459:42:9;1447:55;;;1429:74;;1417:2;1402:18;908:23:7;1283:226:9;9320:169:7;;;;;;:::i;:::-;;:::i;9886:294::-;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;13285:281:7:-;;;:::i;12754:144::-;;;:::i;1360:59::-;;1414:5;1360:59;;12398:90;;;:::i;9137:82::-;;;:::i;1601:35::-;;;;;;1160:59;;1214:5;1160:59;;1201:85:0;1247:7;1273:6;;;1201:85;;11088:539:7;;;;;;:::i;:::-;;:::i;10280:264::-;;;;;;:::i;:::-;;:::i;3365:2752::-;;;;;;:::i;:::-;;:::i;969:50::-;;1015:4;969:50;;1031:46;;1074:3;1031:46;;11780:147;;;:::i;12019:271::-;;;;;;:::i;:::-;;:::i;1691:43::-;;;;;;1647:31;;;;;;747:35;;;;;9593:190;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;883:20:7:-;;;;;;;;;699:29;;;;;10651:326;3141:5;;;;3127:10;:19;3119:43;;;;;;;2210:2:9;3119:43:7;;;2192:21:9;2249:2;2229:18;;;2222:30;2288:13;2268:18;;;2261:41;2319:18;;3119:43:7;;;;;;;;;1138:7:::1;10751:18;:45;;10735:140;;;::::0;::::1;::::0;;2550:2:9;10735:140:7::1;::::0;::::1;2532:21:9::0;2589:2;2569:18;;;2562:30;2628:34;2608:18;;;2601:62;2699:31;2679:18;;;2672:59;2748:19;;10735:140:7::1;2348:425:9::0;10735:140:7::1;10882:17;:38:::0;;;10932:39:::1;::::0;160:25:9;;;10932:39:7::1;::::0;148:2:9;133:18;10932:39:7::1;;;;;;;;10651:326:::0;:::o;6246:2826::-;6328:10;6295:21;6319:20;;;:8;:20;;;;;6354:11;6346:43;;;;;;;2980:2:9;6346:43:7;;;2962:21:9;3019:2;2999:18;;;2992:30;3058:21;3038:18;;;3031:49;3097:18;;6346:43:7;2778:343:9;6346:43:7;6415:11;;6404:22;;;6396:66;;;;;;;3328:2:9;6396:66:7;;;3310:21:9;3367:2;3347:18;;;3340:30;3406:33;3386:18;;;3379:61;3457:18;;6396:66:7;3126:355:9;6396:66:7;6498:19;6550:11;;6535;:9;:11::i;:::-;6521;;:25;;;;:::i;:::-;6520:41;;;;:::i;:::-;6498:63;;6568:18;6603:4;:25;;;6589:11;:39;;;;:::i;:::-;6568:60;-1:-1:-1;6635:29:7;;6710:14;;6706:287;;6791:5;6773:14;;6760:10;:27;;;;:::i;:::-;6759:37;;;;:::i;:::-;6735:61;;6886:11;:9;:11::i;:::-;6862;;6838:35;;:21;:35;:::i;:::-;6837:60;;;;:::i;:::-;6805:92;;6921:20;6906:4;:11;;;:35;;;;;;;:::i;:::-;;;;;;;;6965:20;6950:11;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;;6706:287:7;7043:11;;7033:21;;7029:65;;;7075:11;;;-1:-1:-1;7029:65:7;7174:21;7257:11;;7224:21;7210:11;:9;:11::i;:::-;:35;;;;:::i;:::-;7199:47;;:7;:47;:::i;:::-;7198:70;;;;:::i;:::-;7174:94;;7290:7;7275:4;:11;;;:22;;;;;;;:::i;:::-;;;;;;;;7319:7;7304:11;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;7333:22:7;;-1:-1:-1;7358:37:7;7374:21;7358:13;:37;:::i;:::-;7406:7;;7333:62;;-1:-1:-1;7406:7:7;;;;;7402:473;;;1342:13;7553:14;:36;:93;;7632:14;7553:93;;;1342:13;7553:93;7536:110;;7812:5;7787:21;;7770:14;:38;;;;:::i;:::-;7769:48;;;;:::i;:::-;7826:41;;;;;;;;160:25:9;;;7752:65:7;;-1:-1:-1;7826:8:7;:25;;;;;133:18:9;;7826:41:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7402:473;7883:26;7963:17;;7938:4;:22;;;:42;;;;:::i;:::-;7920:15;:60;7916:185;;;8044:5;8029:11;;8013:13;:27;;;;:::i;:::-;8012:37;;;;:::i;:::-;7991:58;-1:-1:-1;8058:35:7;7991:58;8058:35;;:::i;:::-;;;7916:185;8145:16;8164:42;8188:18;8164:21;:42;:::i;:::-;8145:61;-1:-1:-1;8217:12:7;;8213:438;;8266:8;8251:11;:9;:11::i;:::-;:23;;:48;;8288:11;:9;:11::i;:::-;8251:48;;;8277:8;8251:48;8327:8;;8240:59;;-1:-1:-1;8308:38:7;;8327:8;8308:5;:18;;;8327:8;8240:59;8308:18;:38::i;:::-;8359:25;;8355:178;;8402:121;;;4624:25:9;;;4680:2;4665:18;;4658:34;;;8435:10:7;;8402:121;;4597:18:9;8402:121:7;;;;;;;8355:178;8545:22;;8541:103;;8585:49;;160:25:9;;;8603:10:7;;8585:49;;148:2:9;133:18;8585:49:7;;;;;;;8541:103;8690:13;8675:11;:9;:11::i;:::-;:28;;:58;;8722:11;:9;:11::i;:::-;8675:58;;;8706:13;8675:58;8659:74;-1:-1:-1;8740:45:7;:18;:5;:18;8759:10;8659:74;8740:18;:45::i;:::-;8798:11;;:15;8794:159;;8882:11;;8867;:9;:11::i;:::-;8853;;:25;;;;:::i;:::-;8852:41;;;;:::i;:::-;8824:25;;;:69;8794:159;;;8944:1;8916:25;;;:29;8794:159;8987:15;8961:23;;;:41;9016:50;;;4624:25:9;;;4680:2;4665:18;;4658:34;;;9031:10:7;;9016:50;;4597:18:9;9016:50:7;;;;;;;6288:2784;;;;;;;;;6246:2826;:::o;12596:93::-;3141:5;;;;3127:10;:19;3119:43;;;;;;;2210:2:9;3119:43:7;;;2192:21:9;2249:2;2229:18;;;2222:30;2288:13;2268:18;;;2261:41;2319:18;;3119:43:7;2008:335:9;3119:43:7;1486:16:1::1;:14;:16::i;:::-;12652:10:7::2;:8;:10::i;:::-;12674:9;::::0;::::2;::::0;;;::::2;12596:93::o:0;13039:101::-;13104:30;;;;;13128:4;13104:30;;;1429:74:9;13081:7:7;;13104:5;:15;;;;;1402:18:9;;13104:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13097:37;;13039:101;:::o;9320:169::-;1094:13:0;:11;:13::i;:::-;9388:20:7::1;::::0;::::1;9380:55;;;::::0;::::1;::::0;;5094:2:9;9380:55:7::1;::::0;::::1;5076:21:9::0;5133:2;5113:18;;;5106:30;5172:24;5152:18;;;5145:52;5214:18;;9380:55:7::1;4892:346:9::0;9380:55:7::1;9442:5;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;9468:15:::1;::::0;1429:74:9;;;9468:15:7::1;::::0;1417:2:9;1402:18;9468:15:7::1;1283:226:9::0;9886:294:7;3141:5;;;;3127:10;:19;3119:43;;;;;;;2210:2:9;3119:43:7;;;2192:21:9;2249:2;2229:18;;;2222:30;2288:13;2268:18;;;2261:41;2319:18;;3119:43:7;2008:335:9;3119:43:7;1015:4:::1;9980:15;:38;;9964:126;;;::::0;::::1;::::0;;5445:2:9;9964:126:7::1;::::0;::::1;5427:21:9::0;5484:2;5464:18;;;5457:30;5523:34;5503:18;;;5496:62;5594:24;5574:18;;;5567:52;5636:19;;9964:126:7::1;5243:418:9::0;9964:126:7::1;10097:14;:32:::0;;;10141:33:::1;::::0;160:25:9;;;10141:33:7::1;::::0;148:2:9;133:18;10141:33:7::1;14:177:9::0;1831:101:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;13285:281:7:-;13378:32;;;;;13404:4;13378:32;;;1429:74:9;13327:7:7;;;;13378:17;:8;:17;;;;1402:18:9;;13378:32:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13343:67;;;;;;;;;;13417:25;13445:8;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13417:59;-1:-1:-1;13556:4:7;13526:26;13417:59;13526:6;:26;:::i;:::-;13525:35;;;;:::i;:::-;13492:30;;;;;13516:4;13492:30;;;1429:74:9;13492:5:7;:15;;;;;1402:18:9;;13492:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;;:::i;:::-;13485:75;;;;13285:281;:::o;12754:144::-;12809:7;12832:11;;12847:1;12832:16;:60;;12881:11;;12859;:9;:11::i;:::-;:18;;12873:4;12859:18;:::i;:::-;12858:34;;;;:::i;12832:60::-;-1:-1:-1;12851:4:7;;12754:144::o;12398:90::-;3141:5;;;;3127:10;:19;3119:43;;;;;;;2210:2:9;3119:43:7;;;2192:21:9;2249:2;2229:18;;;2222:30;2288:13;2268:18;;;2261:41;2319:18;;3119:43:7;2008:335:9;3119:43:7;1239:19:1::1;:17;:19::i;:::-;12455:8:7::2;:6;:8::i;:::-;12475:7;::::0;::::2;::::0;;;::::2;12398:90::o:0;9137:82::-;9194:10;9185:20;;;;:8;:20;;;;;:27;9176:37;;:8;:37::i;11088:539::-;3141:5;;;;3127:10;:19;3119:43;;;;;;;2210:2:9;3119:43:7;;;2192:21:9;2249:2;2229:18;;;2222:30;2288:13;2268:18;;;2261:41;2319:18;;3119:43:7;2008:335:9;3119:43:7;1414:5:::1;11206:22;:53;;11190:156;;;::::0;::::1;::::0;;6738:2:9;11190:156:7::1;::::0;::::1;6720:21:9::0;6777:2;6757:18;;;6750:30;6816:34;6796:18;;;6789:62;6887:34;6867:18;;;6860:62;6959:7;6938:19;;;6931:36;6984:19;;11190:156:7::1;6536:473:9::0;11190:156:7::1;1214:5;11369:22;:53;;11353:156;;;::::0;::::1;::::0;;7216:2:9;11353:156:7::1;::::0;::::1;7198:21:9::0;7255:2;7235:18;;;7228:30;7294:34;7274:18;;;7267:62;7365:34;7345:18;;;7338:62;7437:7;7416:19;;;7409:36;7462:19;;11353:156:7::1;7014:473:9::0;11353:156:7::1;11516:21;:46:::0;;;11574:47:::1;::::0;160:25:9;;;11574:47:7::1;::::0;148:2:9;133:18;11574:47:7::1;14:177:9::0;10280:264:7;3141:5;;;;3127:10;:19;3119:43;;;;;;;2210:2:9;3119:43:7;;;2192:21:9;2249:2;2229:18;;;2222:30;2288:13;2268:18;;;2261:41;2319:18;;3119:43:7;2008:335:9;3119:43:7;1074:3:::1;10368:12;:32;;10352:114;;;::::0;::::1;::::0;;7694:2:9;10352:114:7::1;::::0;::::1;7676:21:9::0;7733:2;7713:18;;;7706:30;7772:34;7752:18;;;7745:62;7843:18;7823;;;7816:46;7879:19;;10352:114:7::1;7492:412:9::0;10352:114:7::1;10473:11;:26:::0;;;10511:27:::1;::::0;160:25:9;;;10511:27:7::1;::::0;148:2:9;133:18;10511:27:7::1;14:177:9::0;3365:2752:7;1239:19:1;:17;:19::i;:::-;3437:7:7::1;::::0;;;::::1;;;3429:40;;;::::0;::::1;::::0;;8111:2:9;3429:40:7::1;::::0;::::1;8093:21:9::0;8150:2;8130:18;;;8123:30;8189:22;8169:18;;;8162:50;8229:18;;3429:40:7::1;7909:344:9::0;3429:40:7::1;1278:13;3492:7;:28;3476:116;;;::::0;::::1;::::0;;8460:2:9;3476:116:7::1;::::0;::::1;8442:21:9::0;8499:2;8479:18;;;8472:30;8538:34;8518:18;;;8511:62;8609:24;8589:18;;;8582:52;8651:19;;3476:116:7::1;8258:418:9::0;3476:116:7::1;3632:10;3599:21;3623:20:::0;;;:8:::1;:20;::::0;;;;3787:11;;3623:20;;3599:21;;;;;3787:15;3783:1459:::1;;3813:19;3865:11;;3850;:9;:11::i;:::-;3836::::0;;:25:::1;::::0;;::::1;:::i;:::-;3835:41;;;;:::i;:::-;3813:63;;3885:18;3920:4;:25;;;3906:11;:39;;;;:::i;:::-;3885:60;;4010:5;3992:14;;3979:10;:27;;;;:::i;:::-;3978:37;;;;:::i;:::-;3954:61:::0;-1:-1:-1;4028:25:7;;4024:1211:::1;;4151:11;:9;:11::i;:::-;4125;::::0;4101:35:::1;::::0;:21;:35:::1;:::i;:::-;4100:62;;;;:::i;:::-;4066:96;;4188:20;4173:4;:11;;;:35;;;;;;;:::i;:::-;;;;;;;;4234:20;4219:11;;:35;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4269:32:7;;::::1;4265:961;;4340:4;4316:28;;4265:961;;;4491:22;1342:13;4516:21;:43;:115;;4610:21;4516:115;;;1342:13;4516:115;4491:140;;4805:5;4780:21;;4763:14;:38;;;;:::i;:::-;4762:48;;;;:::i;:::-;4823:41;::::0;;;;::::1;::::0;::::1;160:25:9::0;;;4745:65:7;;-1:-1:-1;4823:8:7::1;:25;;::::0;::::1;::::0;133:18:9;;4823:41:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4918:21;4903:11;:9;:11::i;:::-;:36;;:100;;4992:11;:9;:11::i;:::-;4903:100;;;4955:21;4903:100;5035:8;::::0;4879:124;;-1:-1:-1;5016:51:7::1;::::0;5035:8:::1;5016:5;:18:::0;::::1;::::0;5035:8:::1;4879:124:::0;5016:18:::1;:51::i;:::-;5085:129;::::0;;4624:25:9;;;4680:2;4665:18;;4658:34;;;5120:10:7::1;::::0;5085:129:::1;::::0;4597:18:9;5085:129:7::1;;;;;;;4362:864;4265:961;3804:1438;;3783:1459;5248:12;5263:11;:9;:11::i;:::-;5248:26:::0;-1:-1:-1;5281:58:7::1;:22;:5;:22;5304:10;5324:4;5331:7:::0;5281:22:::1;:58::i;:::-;5350:21;5346:260;;;5401:8;::::0;5382:51:::1;::::0;5401:8:::1;5382:5;:18:::0;::::1;::::0;5401:8:::1;5411:21:::0;5382:18:::1;:51::i;:::-;5447:113;::::0;;4624:25:9;;;4680:2;4665:18;;4658:34;;;5478:10:7::1;::::0;5447:113:::1;::::0;4597:18:9;5447:113:7::1;;;;;;;5569:29;5577:21:::0;5569:29;::::1;:::i;:::-;;;5346:260;5612:21;5644:11;;5659:1;5644:16;5640:131;;5713:4;5698:11;;5688:7;:21;;;;:::i;:::-;5687:30;;;;:::i;:::-;5671:46;;5640:131;;;-1:-1:-1::0;5756:7:7;5640:131:::1;5794:13;5779:4;:11;;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5839:15:7::1;5814:22;::::0;::::1;:40:::0;5863:11:::1;:28:::0;;5878:13;;5863:11;::::1;::::0;:28:::1;::::0;5878:13;;5863:28:::1;:::i;:::-;::::0;;;-1:-1:-1;5900:7:7::1;::::0;-1:-1:-1;5900:5:7::1;:7::i;:::-;5974:11;;5959;:9;:11::i;:::-;5945::::0;;:25:::1;::::0;;::::1;:::i;:::-;5944:41;;;;:::i;:::-;5916:25;::::0;::::1;:69:::0;6018:15:::1;5992:23;::::0;::::1;:41:::0;;;6047:64:::1;::::0;;8883:25:9;;;8939:2;8924:18;;8917:34;;;8967:18;;;8960:34;;;;6059:10:7::1;::::0;6047:64:::1;::::0;8871:2:9;8856:18;6047:64:7::1;;;;;;;3422:2695;;;;;;3365:2752:::0;:::o;11780:147::-;3141:5;;;;3127:10;:19;3119:43;;;;;;;2210:2:9;3119:43:7;;;2192:21:9;2249:2;2229:18;;;2222:30;2288:13;2268:18;;;2261:41;2319:18;;3119:43:7;2008:335:9;3119:43:7;11843:7:::1;::::0;;;::::1;;;11835:35;;;::::0;::::1;::::0;;9207:2:9;11835:35:7::1;::::0;::::1;9189:21:9::0;9246:2;9226:18;;;9219:30;9285:17;9265:18;;;9258:45;9320:18;;11835:35:7::1;9005:339:9::0;11835:35:7::1;11877:7;:15:::0;;;::::1;::::0;;11899:22:::1;::::0;;;;;;;:20:::1;:8;:20;::::0;::::1;::::0;:22;;::::1;::::0;11887:5:::1;::::0;11899:22;;;;;;;11887:5;11899:20;:22;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11780:147::o:0;12019:271::-;3141:5;;;;3127:10;:19;3119:43;;;;;;;2210:2:9;3119:43:7;;;2192:21:9;2249:2;2229:18;;;2222:30;2288:13;2268:18;;;2261:41;2319:18;;3119:43:7;2008:335:9;3119:43:7;12117:5:::1;12099:24;;:6;:24;;::::0;12091:74:::1;;;::::0;::::1;::::0;;9551:2:9;12091:74:7::1;::::0;::::1;9533:21:9::0;9590:2;9570:18;;;9563:30;9629:34;9609:18;;;9602:62;9700:7;9680:18;;;9673:35;9725:19;;12091:74:7::1;9349:401:9::0;12091:74:7::1;12191:39;::::0;;;;12224:4:::1;12191:39;::::0;::::1;1429:74:9::0;12174:14:7::1;::::0;12191:24:::1;::::0;::::1;::::0;::::1;::::0;1402:18:9;;12191:39:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12174:56:::0;-1:-1:-1;12237:47:7::1;:27;::::0;::::1;12265:10;12174:56:::0;12237:27:::1;:47::i;:::-;12084:206;12019:271:::0;:::o;9593:190::-;1094:13:0;:11;:13::i;:::-;9667:23:7::1;::::0;::::1;9659:58;;;::::0;::::1;::::0;;5094:2:9;9659:58:7::1;::::0;::::1;5076:21:9::0;5133:2;5113:18;;;5106:30;5172:24;5152:18;;;5145:52;5214:18;;9659:58:7::1;4892:346:9::0;9659:58:7::1;9724:8;:20:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;9756:21:::1;::::0;1429:74:9;;;9756:21:7::1;::::0;1417:2:9;1402:18;9756:21:7::1;1283:226:9::0;2081:198:0;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;9957:2:9;2161:73:0::1;::::0;::::1;9939:21:9::0;9996:2;9976:18;;;9969:30;10035:34;10015:18;;;10008:62;10106:8;10086:18;;;10079:36;10132:19;;2161:73:0::1;9755:402:9::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1475:603:4:-;1830:10;;;1829:62;;-1:-1:-1;1846:39:4;;;;;1870:4;1846:39;;;10397:34:9;1846:15:4;10467::9;;;10447:18;;;10440:43;1846:15:4;;;;;10309:18:9;;1846:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;;;;10696:2:9;1808:163:4;;;10678:21:9;10735:2;10715:18;;;10708:30;10774:34;10754:18;;;10747:62;10845:24;10825:18;;;10818:52;10887:19;;1808:163:4;10494:418:9;1808:163:4;2008:62;;11121:42:9;11109:55;;2008:62:4;;;11091:74:9;11181:18;;;11174:34;;;1981:90:4;;2001:5;;2031:22;;11064:18:9;;2008:62:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:19;:90::i;:::-;1475:603;;;:::o;3861:223:5:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;763:205:4:-;902:58;;11121:42:9;11109:55;;902:58:4;;;11091:74:9;11181:18;;;11174:34;;;875:86:4;;895:5;;925:23;;11064:18:9;;902:58:4;10917:297:9;1945:106:1;1662:4;1685:7;;;;;;2003:41;;;;;;;11421:2:9;2003:41:1;;;11403:21:9;11460:2;11440:18;;;11433:30;11499:22;11479:18;;;11472:50;11539:18;;2003:41:1;11219:344:9;2433:117:1;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;;::::1;::::0;;2521:22:::1;719:10:6::0;2530:12:1::1;2521:22;::::0;1459:42:9;1447:55;;;1429:74;;1417:2;1402:18;2521:22:1::1;;;;;;;2433:117::o:0;1359:130:0:-;1247:7;1273:6;1422:23;1273:6;719:10:6;1422:23:0;1414:68;;;;;;;11770:2:9;1414:68:0;;;11752:21:9;;;11789:18;;;11782:30;11848:34;11828:18;;;11821:62;11900:18;;1414:68:0;11568:356:9;2433:187:0;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1767:106:1:-;1662:4;1685:7;;;;;;1836:9;1828:38;;;;;;;12131:2:9;1828:38:1;;;12113:21:9;12170:2;12150:18;;;12143:30;12209:18;12189;;;12182:46;12245:18;;1828:38:1;11929:340:9;2186:115:1;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;;::::1;::::0;::::1;::::0;;2274:20:::1;2281:12;719:10:6::0;;640:96;974:241:4;1139:68;;12486:42:9;12555:15;;;1139:68:4;;;12537:34:9;12607:15;;12587:18;;;12580:43;12639:18;;;12632:34;;;1112:96:4;;1132:5;;1162:27;;12449:18:9;;1139:68:4;12274:398:9;13654:124:7;13687:11;13701;:9;:11::i;:::-;13687:25;-1:-1:-1;13723:7:7;;13719:54;;13741:24;;;;;;;;4624:25:9;;;13763:1:7;4665:18:9;;;4658:34;13741:8:7;:16;;;;;4597:18:9;;13741:24:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13680:98;13654:124::o;3747:706:4:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:4;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;13347:2:9;4351:85:4;;;13329:21:9;13386:2;13366:18;;;13359:30;13425:34;13405:18;;;13398:62;13496:12;13476:18;;;13469:40;13526:19;;4351:85:4;13145:406:9;4948:499:5;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;13758:2:9;5137:81:5;;;13740:21:9;13797:2;13777:18;;;13770:30;13836:34;13816:18;;;13809:62;13907:8;13887:18;;;13880:36;13933:19;;5137:81:5;13556:402:9;5137:81:5;1465:19;;;;5228:60;;;;;;;14165:2:9;5228:60:5;;;14147:21:9;14204:2;14184:18;;;14177:30;14243:31;14223:18;;;14216:59;14292:18;;5228:60:5;13963:353:9;5228:60:5;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:5:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:5;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;196:309:9:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;363:9;350:23;413:42;406:5;402:54;395:5;392:65;382:93;;471:1;468;461:12;906:180;965:6;1018:2;1006:9;997:7;993:23;989:32;986:52;;;1034:1;1031;1024:12;986:52;-1:-1:-1;1057:23:9;;906:180;-1:-1:-1;906:180:9:o;3486:184::-;3538:77;3535:1;3528:88;3635:4;3632:1;3625:15;3659:4;3656:1;3649:15;3675:228;3715:7;3841:1;3773:66;3769:74;3766:1;3763:81;3758:1;3751:9;3744:17;3740:105;3737:131;;;3848:18;;:::i;:::-;-1:-1:-1;3888:9:9;;3675:228::o;3908:274::-;3948:1;3974;3964:189;;4009:77;4006:1;3999:88;4110:4;4107:1;4100:15;4138:4;4135:1;4128:15;3964:189;-1:-1:-1;4167:9:9;;3908:274::o;4187:125::-;4227:4;4255:1;4252;4249:8;4246:34;;;4260:18;;:::i;:::-;-1:-1:-1;4297:9:9;;4187:125::o;4317:128::-;4357:3;4388:1;4384:6;4381:1;4378:13;4375:39;;;4394:18;;:::i;:::-;-1:-1:-1;4430:9:9;;4317:128::o;4703:184::-;4773:6;4826:2;4814:9;4805:7;4801:23;4797:32;4794:52;;;4842:1;4839;4832:12;4794:52;-1:-1:-1;4865:16:9;;4703:184;-1:-1:-1;4703:184:9:o;5666:164::-;5742:13;;5791;;5784:21;5774:32;;5764:60;;5820:1;5817;5810:12;5764:60;5666:164;;;:::o;5835:696::-;5974:6;5982;5990;5998;6006;6014;6022;6030;6038;6091:3;6079:9;6070:7;6066:23;6062:33;6059:53;;;6108:1;6105;6098:12;6059:53;6137:9;6131:16;6121:26;;6187:2;6176:9;6172:18;6166:25;6156:35;;6231:2;6220:9;6216:18;6210:25;6200:35;;6275:2;6264:9;6260:18;6254:25;6244:35;;6319:3;6308:9;6304:19;6298:26;6288:36;;6364:3;6353:9;6349:19;6343:26;6333:36;;6409:3;6398:9;6394:19;6388:26;6378:36;;6433:47;6475:3;6464:9;6460:19;6433:47;:::i;:::-;6423:57;;6520:3;6509:9;6505:19;6499:26;6489:36;;5835:696;;;;;;;;;;;:::o;12938:202::-;13005:6;13058:2;13046:9;13037:7;13033:23;13029:32;13026:52;;;13074:1;13071;13064:12;13026:52;13097:37;13124:9;13097:37;:::i;14321:258::-;14393:1;14403:113;14417:6;14414:1;14411:13;14403:113;;;14493:11;;;14487:18;14474:11;;;14467:39;14439:2;14432:10;14403:113;;;14534:6;14531:1;14528:13;14525:48;;;-1:-1:-1;;14569:1:9;14551:16;;14544:27;14321:258::o;14584:274::-;14713:3;14751:6;14745:13;14767:53;14813:6;14808:3;14801:4;14793:6;14789:17;14767:53;:::i;:::-;14836:16;;;;;14584:274;-1:-1:-1;;14584:274:9:o;14863:442::-;15012:2;15001:9;14994:21;14975:4;15044:6;15038:13;15087:6;15082:2;15071:9;15067:18;15060:34;15103:66;15162:6;15157:2;15146:9;15142:18;15137:2;15129:6;15125:15;15103:66;:::i;:::-;15221:2;15209:15;15226:66;15205:88;15190:104;;;;15296:2;15186:113;;14863:442;-1:-1:-1;;14863:442:9:o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"./interfaces/ICakePool.sol\";\r\n\r\ncontract CakeFlexiblePool is Ownable, Pausable {\r\n  using SafeERC20 for IERC20;\r\n\r\n  struct UserInfo {\r\n    uint256 shares; // number of shares for a user\r\n    uint256 lastDepositedTime; // keeps track of deposited time for potential penalty\r\n    uint256 cakeAtLastUserAction; // keeps track of cake deposited at the last user action\r\n    uint256 lastUserActionTime; // keeps track of the last user action time\r\n  }\r\n\r\n  IERC20 public immutable token; // Cake token\r\n  ICakePool public immutable cakePool; //Cake pool\r\n\r\n  mapping(address => UserInfo) public userInfo;\r\n\r\n  uint256 public totalShares;\r\n  address public admin;\r\n  address public treasury;\r\n  bool public staking = true;\r\n\r\n  uint256 public constant MAX_PERFORMANCE_FEE = 2000; // 20%\r\n  uint256 public constant MAX_WITHDRAW_FEE = 500; // 5%\r\n  uint256 public constant MAX_WITHDRAW_FEE_PERIOD = 1 weeks; // 1 week\r\n  uint256 public constant MAX_WITHDRAW_AMOUNT_BOOSTER = 10010; // 1.001\r\n  uint256 public constant MIN_DEPOSIT_AMOUNT = 0.00001 ether;\r\n  uint256 public constant MIN_WITHDRAW_AMOUNT = 0.00001 ether;\r\n  uint256 public constant MIN_WITHDRAW_AMOUNT_BOOSTER = 10000; // 1\r\n\r\n  //When call cakepool.withdrawByAmount function,there will be a loss of precision, so need to withdraw more.\r\n  uint256 public withdrawAmountBooster = 10001; // 1.0001\r\n  uint256 public performanceFee = 200; // 2%\r\n  uint256 public withdrawFee = 10; // 0.1%\r\n  uint256 public withdrawFeePeriod = 72 hours; // 3 days\r\n\r\n  event DepositCake(\r\n    address indexed sender,\r\n    uint256 amount,\r\n    uint256 shares,\r\n    uint256 lastDepositedTime\r\n  );\r\n  event WithdrawShares(address indexed sender, uint256 amount, uint256 shares);\r\n  event ChargePerformanceFee(\r\n    address indexed sender,\r\n    uint256 amount,\r\n    uint256 shares\r\n  );\r\n  event ChargeWithdrawFee(address indexed sender, uint256 amount);\r\n  event Pause();\r\n  event Unpause();\r\n  event NewAdmin(address admin);\r\n  event NewTreasury(address treasury);\r\n  event NewPerformanceFee(uint256 performanceFee);\r\n  event NewWithdrawFee(uint256 withdrawFee);\r\n  event NewWithdrawFeePeriod(uint256 withdrawFeePeriod);\r\n  event NewWithdrawAmountBooster(uint256 withdrawAmountBooster);\r\n\r\n  /**\r\n   * @notice Constructor\r\n   * @param _token: Cake token contract\r\n   * @param _cakePool: CakePool contract\r\n   * @param _admin: address of the admin\r\n   * @param _treasury: address of the treasury (collects fees)\r\n   */\r\n  constructor(\r\n    IERC20 _token,\r\n    ICakePool _cakePool,\r\n    address _admin,\r\n    address _treasury\r\n  ) {\r\n    token = _token;\r\n    cakePool = _cakePool;\r\n    admin = _admin;\r\n    treasury = _treasury;\r\n\r\n    // Infinite approve\r\n    IERC20(_token).safeApprove(address(_cakePool), type(uint256).max);\r\n  }\r\n\r\n  /**\r\n   * @notice Checks if the msg.sender is the admin address\r\n   */\r\n  modifier onlyAdmin() {\r\n    require(msg.sender == admin, \"admin: wut?\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @notice Deposits funds into the Cake Flexible Pool.\r\n   * @dev Only possible when contract not paused.\r\n   * @param _amount: number of tokens to deposit (in CAKE)\r\n   */\r\n  function deposit(uint256 _amount) external whenNotPaused {\r\n    require(staking, \"Not allowed to stake\");\r\n    require(\r\n      _amount > MIN_DEPOSIT_AMOUNT,\r\n      \"Deposit amount must be greater than MIN_DEPOSIT_AMOUNT\"\r\n    );\r\n    UserInfo storage user = userInfo[msg.sender];\r\n    //charge performanceFee\r\n    bool chargeFeeFromDeposite;\r\n    uint256 currentPerformanceFee;\r\n    uint256 performanceFeeShares;\r\n    if (user.shares > 0) {\r\n      uint256 totalAmount = (user.shares * balanceOf()) / totalShares;\r\n      uint256 earnAmount = totalAmount - user.cakeAtLastUserAction;\r\n      currentPerformanceFee = (earnAmount * performanceFee) / 10000;\r\n      if (currentPerformanceFee > 0) {\r\n        performanceFeeShares =\r\n          (currentPerformanceFee * totalShares) /\r\n          balanceOf();\r\n        user.shares -= performanceFeeShares;\r\n        totalShares -= performanceFeeShares;\r\n        if (_amount >= currentPerformanceFee) {\r\n          chargeFeeFromDeposite = true;\r\n        } else {\r\n          // withdrawByAmount have a MIN_WITHDRAW_AMOUNT limit ,so need to withdraw more than MIN_WITHDRAW_AMOUNT.\r\n          uint256 withdrawAmount = currentPerformanceFee < MIN_WITHDRAW_AMOUNT\r\n            ? MIN_WITHDRAW_AMOUNT\r\n            : currentPerformanceFee;\r\n          //There will be a loss of precision when call withdrawByAmount, so need to withdraw more.\r\n          withdrawAmount = (withdrawAmount * withdrawAmountBooster) / 10000;\r\n          cakePool.withdrawByAmount(withdrawAmount);\r\n\r\n          currentPerformanceFee = available() >= currentPerformanceFee\r\n            ? currentPerformanceFee\r\n            : available();\r\n          token.safeTransfer(treasury, currentPerformanceFee);\r\n          emit ChargePerformanceFee(\r\n            msg.sender,\r\n            currentPerformanceFee,\r\n            performanceFeeShares\r\n          );\r\n        }\r\n      }\r\n    }\r\n    uint256 pool = balanceOf();\r\n    token.safeTransferFrom(msg.sender, address(this), _amount);\r\n    if (chargeFeeFromDeposite) {\r\n      token.safeTransfer(treasury, currentPerformanceFee);\r\n      emit ChargePerformanceFee(\r\n        msg.sender,\r\n        currentPerformanceFee,\r\n        performanceFeeShares\r\n      );\r\n      pool -= currentPerformanceFee;\r\n    }\r\n    uint256 currentShares;\r\n    if (totalShares != 0) {\r\n      currentShares = (_amount * totalShares) / pool;\r\n    } else {\r\n      currentShares = _amount;\r\n    }\r\n\r\n    user.shares += currentShares;\r\n    user.lastDepositedTime = block.timestamp;\r\n\r\n    totalShares += currentShares;\r\n\r\n    _earn();\r\n\r\n    user.cakeAtLastUserAction = (user.shares * balanceOf()) / totalShares;\r\n    user.lastUserActionTime = block.timestamp;\r\n\r\n    emit DepositCake(msg.sender, _amount, currentShares, block.timestamp);\r\n  }\r\n\r\n  /**\r\n   * @notice Withdraws funds from the Cake Flexible Pool\r\n   * @param _shares: Number of shares to withdraw\r\n   */\r\n  function withdraw(uint256 _shares) public {\r\n    UserInfo storage user = userInfo[msg.sender];\r\n    require(_shares > 0, \"Nothing to withdraw\");\r\n    require(_shares <= user.shares, \"Withdraw amount exceeds balance\");\r\n    //charge performanceFee\r\n    uint256 totalAmount = (user.shares * balanceOf()) / totalShares;\r\n    uint256 earnAmount = totalAmount - user.cakeAtLastUserAction;\r\n    uint256 currentPerformanceFee;\r\n    uint256 performanceFeeShares;\r\n    if (earnAmount > 0) {\r\n      currentPerformanceFee = (earnAmount * performanceFee) / 10000;\r\n      performanceFeeShares =\r\n        (currentPerformanceFee * totalShares) /\r\n        balanceOf();\r\n      user.shares -= performanceFeeShares;\r\n      totalShares -= performanceFeeShares;\r\n    }\r\n    //Update withdraw shares\r\n    if (_shares > user.shares) {\r\n      _shares = user.shares;\r\n    }\r\n    //The current pool balance should not include currentPerformanceFee.\r\n    uint256 currentAmount = (_shares * (balanceOf() - currentPerformanceFee)) /\r\n      totalShares;\r\n    user.shares -= _shares;\r\n    totalShares -= _shares;\r\n    uint256 withdrawAmount = currentAmount + currentPerformanceFee;\r\n    if (staking) {\r\n      // withdrawByAmount have a MIN_WITHDRAW_AMOUNT limit ,so need to withdraw more than MIN_WITHDRAW_AMOUNT.\r\n      withdrawAmount = withdrawAmount < MIN_WITHDRAW_AMOUNT\r\n        ? MIN_WITHDRAW_AMOUNT\r\n        : withdrawAmount;\r\n      //There will be a loss of precision when call withdrawByAmount, so need to withdraw more.\r\n      withdrawAmount = (withdrawAmount * withdrawAmountBooster) / 10000;\r\n      cakePool.withdrawByAmount(withdrawAmount);\r\n    }\r\n\r\n    uint256 currentWithdrawFee;\r\n    if (block.timestamp < user.lastDepositedTime + withdrawFeePeriod) {\r\n      currentWithdrawFee = (currentAmount * withdrawFee) / 10000;\r\n      currentAmount -= currentWithdrawFee;\r\n    }\r\n    //Combine two fees to reduce gas\r\n    uint256 totalFee = currentPerformanceFee + currentWithdrawFee;\r\n    if (totalFee > 0) {\r\n      totalFee = available() >= totalFee ? totalFee : available();\r\n      token.safeTransfer(treasury, totalFee);\r\n      if (currentPerformanceFee > 0) {\r\n        emit ChargePerformanceFee(\r\n          msg.sender,\r\n          currentPerformanceFee,\r\n          performanceFeeShares\r\n        );\r\n      }\r\n      if (currentWithdrawFee > 0) {\r\n        emit ChargeWithdrawFee(msg.sender, currentWithdrawFee);\r\n      }\r\n    }\r\n\r\n    currentAmount = available() >= currentAmount ? currentAmount : available();\r\n    token.safeTransfer(msg.sender, currentAmount);\r\n\r\n    if (user.shares > 0) {\r\n      user.cakeAtLastUserAction = (user.shares * balanceOf()) / totalShares;\r\n    } else {\r\n      user.cakeAtLastUserAction = 0;\r\n    }\r\n\r\n    user.lastUserActionTime = block.timestamp;\r\n\r\n    emit WithdrawShares(msg.sender, currentAmount, _shares);\r\n  }\r\n\r\n  /**\r\n   * @notice Withdraws all funds for a user\r\n   */\r\n  function withdrawAll() external {\r\n    withdraw(userInfo[msg.sender].shares);\r\n  }\r\n\r\n  /**\r\n   * @notice Sets admin address\r\n   * @dev Only callable by the contract owner.\r\n   */\r\n  function setAdmin(address _admin) external onlyOwner {\r\n    require(_admin != address(0), \"Cannot be zero address\");\r\n    admin = _admin;\r\n    emit NewAdmin(admin);\r\n  }\r\n\r\n  /**\r\n   * @notice Sets treasury address\r\n   * @dev Only callable by the contract owner.\r\n   */\r\n  function setTreasury(address _treasury) external onlyOwner {\r\n    require(_treasury != address(0), \"Cannot be zero address\");\r\n    treasury = _treasury;\r\n    emit NewTreasury(treasury);\r\n  }\r\n\r\n  /**\r\n   * @notice Sets performance fee\r\n   * @dev Only callable by the contract admin.\r\n   */\r\n  function setPerformanceFee(uint256 _performanceFee) external onlyAdmin {\r\n    require(\r\n      _performanceFee <= MAX_PERFORMANCE_FEE,\r\n      \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\"\r\n    );\r\n    performanceFee = _performanceFee;\r\n    emit NewPerformanceFee(performanceFee);\r\n  }\r\n\r\n  /**\r\n   * @notice Sets withdraw fee\r\n   * @dev Only callable by the contract admin.\r\n   */\r\n  function setWithdrawFee(uint256 _withdrawFee) external onlyAdmin {\r\n    require(\r\n      _withdrawFee <= MAX_WITHDRAW_FEE,\r\n      \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\"\r\n    );\r\n    withdrawFee = _withdrawFee;\r\n    emit NewWithdrawFee(withdrawFee);\r\n  }\r\n\r\n  /**\r\n   * @notice Sets withdraw fee period\r\n   * @dev Only callable by the contract admin.\r\n   */\r\n  function setWithdrawFeePeriod(uint256 _withdrawFeePeriod) external onlyAdmin {\r\n    require(\r\n      _withdrawFeePeriod <= MAX_WITHDRAW_FEE_PERIOD,\r\n      \"withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD\"\r\n    );\r\n    withdrawFeePeriod = _withdrawFeePeriod;\r\n    emit NewWithdrawFeePeriod(withdrawFeePeriod);\r\n  }\r\n\r\n  /**\r\n   * @notice Sets withdraw amount booster\r\n   * @dev Only callable by the contract admin.\r\n   */\r\n  function setWithdrawAmountBooster(\r\n    uint256 _withdrawAmountBooster\r\n  ) external onlyAdmin {\r\n    require(\r\n      _withdrawAmountBooster >= MIN_WITHDRAW_AMOUNT_BOOSTER,\r\n      \"withdrawAmountBooster cannot be less than MIN_WITHDRAW_AMOUNT_BOOSTER\"\r\n    );\r\n    require(\r\n      _withdrawAmountBooster <= MAX_WITHDRAW_AMOUNT_BOOSTER,\r\n      \"withdrawAmountBooster cannot be more than MAX_WITHDRAW_AMOUNT_BOOSTER\"\r\n    );\r\n    withdrawAmountBooster = _withdrawAmountBooster;\r\n    emit NewWithdrawAmountBooster(withdrawAmountBooster);\r\n  }\r\n\r\n  /**\r\n   * @notice Withdraws from Cake Pool without caring about rewards.\r\n   * @dev EMERGENCY ONLY. Only callable by the contract admin.\r\n   */\r\n  function emergencyWithdraw() external onlyAdmin {\r\n    require(staking, \"No staking cake\");\r\n    staking = false;\r\n    cakePool.withdrawAll();\r\n  }\r\n\r\n  /**\r\n   * @notice Withdraw unexpected tokens sent to the Cake Flexible Pool\r\n   */\r\n  function inCaseTokensGetStuck(address _token) external onlyAdmin {\r\n    require(_token != address(token), \"Token cannot be same as deposit token\");\r\n\r\n    uint256 amount = IERC20(_token).balanceOf(address(this));\r\n    IERC20(_token).safeTransfer(msg.sender, amount);\r\n  }\r\n\r\n  /**\r\n   * @notice Triggers stopped state\r\n   * @dev Only possible when contract not paused.\r\n   */\r\n  function pause() external onlyAdmin whenNotPaused {\r\n    _pause();\r\n    emit Pause();\r\n  }\r\n\r\n  /**\r\n   * @notice Returns to normal state\r\n   * @dev Only possible when contract is paused.\r\n   */\r\n  function unpause() external onlyAdmin whenPaused {\r\n    _unpause();\r\n    emit Unpause();\r\n  }\r\n\r\n  /**\r\n   * @notice Calculates the price per share\r\n   */\r\n  function getPricePerFullShare() external view returns (uint256) {\r\n    return totalShares == 0 ? 1e18 : (balanceOf() * 1e18) / totalShares;\r\n  }\r\n\r\n  /**\r\n   * @notice Custom logic for how much the pool to be borrowed\r\n   * @dev The contract puts 100% of the tokens to work.\r\n   */\r\n  function available() public view returns (uint256) {\r\n    return token.balanceOf(address(this));\r\n  }\r\n\r\n  /**\r\n   * @notice Calculates the total underlying tokens\r\n   * @dev It includes tokens held by the contract and held in CakePool\r\n   */\r\n  function balanceOf() public view returns (uint256) {\r\n    (uint256 shares, , , , , , , , ) = cakePool.userInfo(address(this));\r\n    uint256 pricePerFullShare = cakePool.getPricePerFullShare();\r\n\r\n    return token.balanceOf(address(this)) + (shares * pricePerFullShare) / 1e18;\r\n  }\r\n\r\n  /**\r\n   * @notice Deposits tokens into CakePool to earn staking rewards\r\n   */\r\n  function _earn() internal {\r\n    uint256 bal = available();\r\n    if (bal > 0) {\r\n      cakePool.deposit(bal, 0);\r\n    }\r\n  }\r\n}\r\n",
  "sourcePath": "D:\\Other_Folder\\ANGGA\\NFT\\CLIENT\\MAS WIDI NEW\\NewVenosSmartContract\\contracts\\CakeFlexiblePool.sol",
  "ast": {
    "absolutePath": "project:/contracts/CakeFlexiblePool.sol",
    "exportedSymbols": {
      "Address": [
        910
      ],
      "CakeFlexiblePool": [
        2039
      ],
      "Context": [
        932
      ],
      "ICakePool": [
        2109
      ],
      "IERC20": [
        298
      ],
      "IERC20Permit": [
        334
      ],
      "Ownable": [
        112
      ],
      "Pausable": [
        220
      ],
      "SafeERC20": [
        615
      ]
    },
    "id": 2040,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 934,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 935,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2040,
        "sourceUnit": 113,
        "src": "60:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 936,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2040,
        "sourceUnit": 616,
        "src": "114:65:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 937,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2040,
        "sourceUnit": 221,
        "src": "181:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ICakePool.sol",
        "file": "./interfaces/ICakePool.sol",
        "id": 938,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2040,
        "sourceUnit": 2110,
        "src": "238:36:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 939,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "307:7:7"
            },
            "id": 940,
            "nodeType": "InheritanceSpecifier",
            "src": "307:7:7"
          },
          {
            "baseName": {
              "id": 941,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 220,
              "src": "316:8:7"
            },
            "id": 942,
            "nodeType": "InheritanceSpecifier",
            "src": "316:8:7"
          }
        ],
        "canonicalName": "CakeFlexiblePool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2039,
        "linearizedBaseContracts": [
          2039,
          220,
          112,
          932
        ],
        "name": "CakeFlexiblePool",
        "nameLocation": "287:16:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 946,
            "libraryName": {
              "id": 943,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 615,
              "src": "336:9:7"
            },
            "nodeType": "UsingForDirective",
            "src": "330:27:7",
            "typeName": {
              "id": 945,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 944,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 298,
                "src": "350:6:7"
              },
              "referencedDeclaration": 298,
              "src": "350:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$298",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "CakeFlexiblePool.UserInfo",
            "id": 955,
            "members": [
              {
                "constant": false,
                "id": 948,
                "mutability": "mutable",
                "name": "shares",
                "nameLocation": "394:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "386:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 947,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "386:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 950,
                "mutability": "mutable",
                "name": "lastDepositedTime",
                "nameLocation": "446:17:7",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "438:25:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 949,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "438:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 952,
                "mutability": "mutable",
                "name": "cakeAtLastUserAction",
                "nameLocation": "533:20:7",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "525:28:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 951,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "525:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 954,
                "mutability": "mutable",
                "name": "lastUserActionTime",
                "nameLocation": "625:18:7",
                "nodeType": "VariableDeclaration",
                "scope": 955,
                "src": "617:26:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 953,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "617:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nameLocation": "370:8:7",
            "nodeType": "StructDefinition",
            "scope": 2039,
            "src": "363:330:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 958,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "723:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "699:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$298",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 957,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 956,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 298,
                "src": "699:6:7"
              },
              "referencedDeclaration": 298,
              "src": "699:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$298",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed64a967",
            "id": 961,
            "mutability": "immutable",
            "name": "cakePool",
            "nameLocation": "774:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "747:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICakePool_$2109",
              "typeString": "contract ICakePool"
            },
            "typeName": {
              "id": 960,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 959,
                "name": "ICakePool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2109,
                "src": "747:9:7"
              },
              "referencedDeclaration": 2109,
              "src": "747:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICakePool_$2109",
                "typeString": "contract ICakePool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1959a002",
            "id": 966,
            "mutability": "mutable",
            "name": "userInfo",
            "nameLocation": "837:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "801:44:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$955_storage_$",
              "typeString": "mapping(address => struct CakeFlexiblePool.UserInfo)"
            },
            "typeName": {
              "id": 965,
              "keyType": {
                "id": 962,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "809:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "801:28:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$955_storage_$",
                "typeString": "mapping(address => struct CakeFlexiblePool.UserInfo)"
              },
              "valueType": {
                "id": 964,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 963,
                  "name": "UserInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 955,
                  "src": "820:8:7"
                },
                "referencedDeclaration": 955,
                "src": "820:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                  "typeString": "struct CakeFlexiblePool.UserInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3a98ef39",
            "id": 968,
            "mutability": "mutable",
            "name": "totalShares",
            "nameLocation": "867:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "852:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 967,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "852:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 970,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "898:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "883:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 969,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "883:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61d027b3",
            "id": 972,
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "923:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "908:23:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 971,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "908:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4cf088d9",
            "id": 975,
            "mutability": "mutable",
            "name": "staking",
            "nameLocation": "948:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "936:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 973,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "936:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 974,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "958:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "bdca9165",
            "id": 978,
            "mutability": "constant",
            "name": "MAX_PERFORMANCE_FEE",
            "nameLocation": "993:19:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "969:50:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 976,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "969:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32303030",
              "id": 977,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1015:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000_by_1",
                "typeString": "int_const 2000"
              },
              "value": "2000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "d4b0de2f",
            "id": 981,
            "mutability": "constant",
            "name": "MAX_WITHDRAW_FEE",
            "nameLocation": "1055:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "1031:46:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 979,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1031:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353030",
              "id": 980,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1074:3:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2cfc5f01",
            "id": 984,
            "mutability": "constant",
            "name": "MAX_WITHDRAW_FEE_PERIOD",
            "nameLocation": "1112:23:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "1088:57:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 982,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1088:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 983,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1138:7:7",
              "subdenomination": "weeks",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "8a180eea",
            "id": 987,
            "mutability": "constant",
            "name": "MAX_WITHDRAW_AMOUNT_BOOSTER",
            "nameLocation": "1184:27:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "1160:59:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 985,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1160:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303130",
              "id": 986,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1214:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10010_by_1",
                "typeString": "int_const 10010"
              },
              "value": "10010"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "1ea30fef",
            "id": 990,
            "mutability": "constant",
            "name": "MIN_DEPOSIT_AMOUNT",
            "nameLocation": "1257:18:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "1233:58:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 988,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1233:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3030303031",
              "id": 989,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1278:13:7",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000_by_1",
                "typeString": "int_const 10000000000000"
              },
              "value": "0.00001"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "b6857844",
            "id": 993,
            "mutability": "constant",
            "name": "MIN_WITHDRAW_AMOUNT",
            "nameLocation": "1320:19:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "1296:59:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 991,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1296:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3030303031",
              "id": 992,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1342:13:7",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000_by_1",
                "typeString": "int_const 10000000000000"
              },
              "value": "0.00001"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "82dba642",
            "id": 996,
            "mutability": "constant",
            "name": "MIN_WITHDRAW_AMOUNT_BOOSTER",
            "nameLocation": "1384:27:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "1360:59:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 994,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1360:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 995,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1414:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "14c9253e",
            "id": 999,
            "mutability": "mutable",
            "name": "withdrawAmountBooster",
            "nameLocation": "1557:21:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "1542:44:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 997,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1542:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303031",
              "id": 998,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1581:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10001_by_1",
                "typeString": "int_const 10001"
              },
              "value": "10001"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "87788782",
            "id": 1002,
            "mutability": "mutable",
            "name": "performanceFee",
            "nameLocation": "1616:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "1601:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1000,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1601:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "323030",
              "id": 1001,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1633:3:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200_by_1",
                "typeString": "int_const 200"
              },
              "value": "200"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e941fa78",
            "id": 1005,
            "mutability": "mutable",
            "name": "withdrawFee",
            "nameLocation": "1662:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "1647:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1003,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1647:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 1004,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1676:2:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "df10b4e6",
            "id": 1008,
            "mutability": "mutable",
            "name": "withdrawFeePeriod",
            "nameLocation": "1706:17:7",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "1691:43:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1006,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1691:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3732",
              "id": 1007,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1726:8:7",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_259200_by_1",
                "typeString": "int_const 259200"
              },
              "value": "72"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "269e310e936abd6c2408df165913683c9c53eef830fe562f699fd50c3b860c06",
            "id": 1018,
            "name": "DepositCake",
            "nameLocation": "1757:11:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1010,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1791:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "1775:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1012,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1812:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "1804:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1804:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1014,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1833:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "1825:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1825:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1016,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastDepositedTime",
                  "nameLocation": "1854:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "1846:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1768:108:7"
            },
            "src": "1751:126:7"
          },
          {
            "anonymous": false,
            "eventSelector": "b605f60b5ff13848ba5a9234329676801d97e41362092b50014cad41fb2b7bfc",
            "id": 1026,
            "name": "WithdrawShares",
            "nameLocation": "1887:14:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1020,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1918:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "1902:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1022,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1934:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "1926:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1024,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1950:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "1942:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1942:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1901:56:7"
            },
            "src": "1881:77:7"
          },
          {
            "anonymous": false,
            "eventSelector": "ba099d38a7da8262f6dc89809a028ddb51ce1f8fe4d9c7554ef909078f6e10c9",
            "id": 1034,
            "name": "ChargePerformanceFee",
            "nameLocation": "1968:20:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1028,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2011:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1034,
                  "src": "1995:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1995:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1030,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2032:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1034,
                  "src": "2024:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1032,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "2053:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1034,
                  "src": "2045:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1988:76:7"
            },
            "src": "1962:103:7"
          },
          {
            "anonymous": false,
            "eventSelector": "f4451cbaeb1fedd1db1eed585be4980b066afa1fa1c2a59f361ca67191e9695a",
            "id": 1040,
            "name": "ChargeWithdrawFee",
            "nameLocation": "2075:17:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1036,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2109:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "2093:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1038,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2125:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "2117:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2092:40:7"
            },
            "src": "2069:64:7"
          },
          {
            "anonymous": false,
            "eventSelector": "6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625",
            "id": 1042,
            "name": "Pause",
            "nameLocation": "2143:5:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2148:2:7"
            },
            "src": "2137:14:7"
          },
          {
            "anonymous": false,
            "eventSelector": "7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33",
            "id": 1044,
            "name": "Unpause",
            "nameLocation": "2161:7:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2168:2:7"
            },
            "src": "2155:16:7"
          },
          {
            "anonymous": false,
            "eventSelector": "71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c",
            "id": 1048,
            "name": "NewAdmin",
            "nameLocation": "2181:8:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1046,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "2198:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1048,
                  "src": "2190:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2189:15:7"
            },
            "src": "2175:30:7"
          },
          {
            "anonymous": false,
            "eventSelector": "afa147634b29e2c7bd53ce194256b9f41cfb9ba3036f2b822fdd1d965beea086",
            "id": 1052,
            "name": "NewTreasury",
            "nameLocation": "2215:11:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1050,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "treasury",
                  "nameLocation": "2235:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1052,
                  "src": "2227:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2227:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2226:18:7"
            },
            "src": "2209:36:7"
          },
          {
            "anonymous": false,
            "eventSelector": "efeafcf03e479a9566d7ef321b4816de0ba19cfa3cd0fae2f8c5f4a0afb342c4",
            "id": 1056,
            "name": "NewPerformanceFee",
            "nameLocation": "2255:17:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1054,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "performanceFee",
                  "nameLocation": "2281:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1056,
                  "src": "2273:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2272:24:7"
            },
            "src": "2249:48:7"
          },
          {
            "anonymous": false,
            "eventSelector": "d5fe46099fa396290a7f57e36c3c3c8774e2562c18ed5d1dcc0fa75071e03f1d",
            "id": 1060,
            "name": "NewWithdrawFee",
            "nameLocation": "2307:14:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1058,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawFee",
                  "nameLocation": "2330:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "2322:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2321:21:7"
            },
            "src": "2301:42:7"
          },
          {
            "anonymous": false,
            "eventSelector": "b89ddaddb7435be26824cb48d2d0186c9525a2e1ec057abcb502704cdc0686cc",
            "id": 1064,
            "name": "NewWithdrawFeePeriod",
            "nameLocation": "2353:20:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1062,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawFeePeriod",
                  "nameLocation": "2382:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "2374:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2374:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2373:27:7"
            },
            "src": "2347:54:7"
          },
          {
            "anonymous": false,
            "eventSelector": "6029d76ffeb0d7684607fa1164412e907a5fcb0849976856b2f98f0ae49fb457",
            "id": 1068,
            "name": "NewWithdrawAmountBooster",
            "nameLocation": "2411:24:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1066,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawAmountBooster",
                  "nameLocation": "2444:21:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "2436:29:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2436:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2435:31:7"
            },
            "src": "2405:62:7"
          },
          {
            "body": {
              "id": 1113,
              "nodeType": "Block",
              "src": "2810:201:7",
              "statements": [
                {
                  "expression": {
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1082,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 958,
                      "src": "2817:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$298",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1083,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1072,
                      "src": "2825:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$298",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2817:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$298",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1085,
                  "nodeType": "ExpressionStatement",
                  "src": "2817:14:7"
                },
                {
                  "expression": {
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1086,
                      "name": "cakePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "2838:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICakePool_$2109",
                        "typeString": "contract ICakePool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1087,
                      "name": "_cakePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1075,
                      "src": "2849:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICakePool_$2109",
                        "typeString": "contract ICakePool"
                      }
                    },
                    "src": "2838:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICakePool_$2109",
                      "typeString": "contract ICakePool"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "2838:20:7"
                },
                {
                  "expression": {
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1090,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "2865:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1091,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "2873:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2865:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1093,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:14:7"
                },
                {
                  "expression": {
                    "id": 1096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1094,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "2886:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1095,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1079,
                      "src": "2897:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2886:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1097,
                  "nodeType": "ExpressionStatement",
                  "src": "2886:20:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1104,
                            "name": "_cakePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "2975:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICakePool_$2109",
                              "typeString": "contract ICakePool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ICakePool_$2109",
                              "typeString": "contract ICakePool"
                            }
                          ],
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2967:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1102,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2967:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2967:18:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2992:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1107,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2992:7:7",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 1106,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "2987:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2987:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2987:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1099,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1072,
                            "src": "2947:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$298",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$298",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1098,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "2940:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$298_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2940:14:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$298",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 436,
                      "src": "2940:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2940:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:65:7"
                }
              ]
            },
            "documentation": {
              "id": 1069,
              "nodeType": "StructuredDocumentation",
              "src": "2473:225:7",
              "text": " @notice Constructor\n @param _token: Cake token contract\n @param _cakePool: CakePool contract\n @param _admin: address of the admin\n @param _treasury: address of the treasury (collects fees)"
            },
            "id": 1114,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2727:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "2720:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$298",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1071,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1070,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 298,
                      "src": "2720:6:7"
                    },
                    "referencedDeclaration": 298,
                    "src": "2720:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$298",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1075,
                  "mutability": "mutable",
                  "name": "_cakePool",
                  "nameLocation": "2750:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "2740:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICakePool_$2109",
                    "typeString": "contract ICakePool"
                  },
                  "typeName": {
                    "id": 1074,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1073,
                      "name": "ICakePool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2109,
                      "src": "2740:9:7"
                    },
                    "referencedDeclaration": 2109,
                    "src": "2740:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICakePool_$2109",
                      "typeString": "contract ICakePool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "2774:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "2766:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2766:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1079,
                  "mutability": "mutable",
                  "name": "_treasury",
                  "nameLocation": "2795:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "2787:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2787:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2713:96:7"
            },
            "returnParameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2810:0:7"
            },
            "scope": 2039,
            "src": "2702:309:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1126,
              "nodeType": "Block",
              "src": "3112:64:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1118,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3127:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3127:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1120,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 970,
                          "src": "3141:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3127:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "61646d696e3a207775743f",
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3148:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab213c35f672435e67628857c3c923a20212362eb6524982747a411911be3aa6",
                          "typeString": "literal_string \"admin: wut?\""
                        },
                        "value": "admin: wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab213c35f672435e67628857c3c923a20212362eb6524982747a411911be3aa6",
                          "typeString": "literal_string \"admin: wut?\""
                        }
                      ],
                      "id": 1117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3119:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3119:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1124,
                  "nodeType": "ExpressionStatement",
                  "src": "3119:43:7"
                },
                {
                  "id": 1125,
                  "nodeType": "PlaceholderStatement",
                  "src": "3169:1:7"
                }
              ]
            },
            "documentation": {
              "id": 1115,
              "nodeType": "StructuredDocumentation",
              "src": "3017:70:7",
              "text": " @notice Checks if the msg.sender is the admin address"
            },
            "id": 1127,
            "name": "onlyAdmin",
            "nameLocation": "3100:9:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3109:2:7"
            },
            "src": "3091:85:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1390,
              "nodeType": "Block",
              "src": "3422:2695:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1136,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "3437:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420746f207374616b65",
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3446:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_775fbd347d18501cd3f7f66dfe2f71dcc29fc812a8b32e31e373fd76bc75c0ef",
                          "typeString": "literal_string \"Not allowed to stake\""
                        },
                        "value": "Not allowed to stake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_775fbd347d18501cd3f7f66dfe2f71dcc29fc812a8b32e31e373fd76bc75c0ef",
                          "typeString": "literal_string \"Not allowed to stake\""
                        }
                      ],
                      "id": 1135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3429:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3429:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "3429:40:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1141,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1130,
                          "src": "3492:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 1142,
                          "name": "MIN_DEPOSIT_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "3502:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3492:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e204d494e5f4445504f5349545f414d4f554e54",
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3529:56:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83154039a634b124bba68b99876328e44211f83ee05a7c9c81da77a2d3756ab4",
                          "typeString": "literal_string \"Deposit amount must be greater than MIN_DEPOSIT_AMOUNT\""
                        },
                        "value": "Deposit amount must be greater than MIN_DEPOSIT_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83154039a634b124bba68b99876328e44211f83ee05a7c9c81da77a2d3756ab4",
                          "typeString": "literal_string \"Deposit amount must be greater than MIN_DEPOSIT_AMOUNT\""
                        }
                      ],
                      "id": 1140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3476:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3476:116:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "3476:116:7"
                },
                {
                  "assignments": [
                    1149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1149,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "3616:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1390,
                      "src": "3599:21:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                        "typeString": "struct CakeFlexiblePool.UserInfo"
                      },
                      "typeName": {
                        "id": 1148,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1147,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 955,
                          "src": "3599:8:7"
                        },
                        "referencedDeclaration": 955,
                        "src": "3599:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                          "typeString": "struct CakeFlexiblePool.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1154,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1150,
                      "name": "userInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 966,
                      "src": "3623:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$955_storage_$",
                        "typeString": "mapping(address => struct CakeFlexiblePool.UserInfo storage ref)"
                      }
                    },
                    "id": 1153,
                    "indexExpression": {
                      "expression": {
                        "id": 1151,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3632:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3632:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3623:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$955_storage",
                      "typeString": "struct CakeFlexiblePool.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3599:44:7"
                },
                {
                  "assignments": [
                    1156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1156,
                      "mutability": "mutable",
                      "name": "chargeFeeFromDeposite",
                      "nameLocation": "3684:21:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1390,
                      "src": "3679:26:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1155,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3679:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1157,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3679:26:7"
                },
                {
                  "assignments": [
                    1159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1159,
                      "mutability": "mutable",
                      "name": "currentPerformanceFee",
                      "nameLocation": "3720:21:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1390,
                      "src": "3712:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1158,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3712:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1160,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3712:29:7"
                },
                {
                  "assignments": [
                    1162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1162,
                      "mutability": "mutable",
                      "name": "performanceFeeShares",
                      "nameLocation": "3756:20:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1390,
                      "src": "3748:28:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1161,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3748:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1163,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3748:28:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1164,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "3787:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                          "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                        }
                      },
                      "id": 1165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 948,
                      "src": "3787:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3801:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3787:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1280,
                  "nodeType": "IfStatement",
                  "src": "3783:1459:7",
                  "trueBody": {
                    "id": 1279,
                    "nodeType": "Block",
                    "src": "3804:1438:7",
                    "statements": [
                      {
                        "assignments": [
                          1169
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1169,
                            "mutability": "mutable",
                            "name": "totalAmount",
                            "nameLocation": "3821:11:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1279,
                            "src": "3813:19:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1168,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3813:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1178,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1170,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1149,
                                    "src": "3836:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                                      "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                                    }
                                  },
                                  "id": 1171,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "shares",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 948,
                                  "src": "3836:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1172,
                                    "name": "balanceOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2016,
                                    "src": "3850:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 1173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3850:11:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3836:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1175,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3835:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1176,
                            "name": "totalShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 968,
                            "src": "3865:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3835:41:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3813:63:7"
                      },
                      {
                        "assignments": [
                          1180
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1180,
                            "mutability": "mutable",
                            "name": "earnAmount",
                            "nameLocation": "3893:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1279,
                            "src": "3885:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1179,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3885:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1185,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1181,
                            "name": "totalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1169,
                            "src": "3906:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 1182,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1149,
                              "src": "3920:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                                "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                              }
                            },
                            "id": 1183,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cakeAtLastUserAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 952,
                            "src": "3920:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3906:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3885:60:7"
                      },
                      {
                        "expression": {
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1186,
                            "name": "currentPerformanceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1159,
                            "src": "3954:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1187,
                                    "name": "earnAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1180,
                                    "src": "3979:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1188,
                                    "name": "performanceFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1002,
                                    "src": "3992:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3979:27:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1190,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3978:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "3130303030",
                              "id": 1191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4010:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            },
                            "src": "3978:37:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3954:61:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1194,
                        "nodeType": "ExpressionStatement",
                        "src": "3954:61:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1195,
                            "name": "currentPerformanceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1159,
                            "src": "4028:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4052:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4028:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1278,
                        "nodeType": "IfStatement",
                        "src": "4024:1211:7",
                        "trueBody": {
                          "id": 1277,
                          "nodeType": "Block",
                          "src": "4055:1180:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1198,
                                  "name": "performanceFeeShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1162,
                                  "src": "4066:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1201,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1199,
                                          "name": "currentPerformanceFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1159,
                                          "src": "4101:21:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 1200,
                                          "name": "totalShares",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 968,
                                          "src": "4125:11:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4101:35:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1202,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4100:37:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1203,
                                      "name": "balanceOf",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2016,
                                      "src": "4151:9:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 1204,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4151:11:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4100:62:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4066:96:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1207,
                              "nodeType": "ExpressionStatement",
                              "src": "4066:96:7"
                            },
                            {
                              "expression": {
                                "id": 1212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1208,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1149,
                                    "src": "4173:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                                      "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                                    }
                                  },
                                  "id": 1210,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "shares",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 948,
                                  "src": "4173:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1211,
                                  "name": "performanceFeeShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1162,
                                  "src": "4188:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4173:35:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1213,
                              "nodeType": "ExpressionStatement",
                              "src": "4173:35:7"
                            },
                            {
                              "expression": {
                                "id": 1216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1214,
                                  "name": "totalShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 968,
                                  "src": "4219:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1215,
                                  "name": "performanceFeeShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1162,
                                  "src": "4234:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4219:35:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1217,
                              "nodeType": "ExpressionStatement",
                              "src": "4219:35:7"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1218,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1130,
                                  "src": "4269:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1219,
                                  "name": "currentPerformanceFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1159,
                                  "src": "4280:21:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4269:32:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1275,
                                "nodeType": "Block",
                                "src": "4362:864:7",
                                "statements": [
                                  {
                                    "assignments": [
                                      1227
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1227,
                                        "mutability": "mutable",
                                        "name": "withdrawAmount",
                                        "nameLocation": "4499:14:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1275,
                                        "src": "4491:22:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 1226,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4491:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1234,
                                    "initialValue": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1230,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1228,
                                          "name": "currentPerformanceFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1159,
                                          "src": "4516:21:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "id": 1229,
                                          "name": "MIN_WITHDRAW_AMOUNT",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 993,
                                          "src": "4540:19:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4516:43:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "id": 1232,
                                        "name": "currentPerformanceFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1159,
                                        "src": "4610:21:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1233,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "4516:115:7",
                                      "trueExpression": {
                                        "id": 1231,
                                        "name": "MIN_WITHDRAW_AMOUNT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 993,
                                        "src": "4575:19:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4491:140:7"
                                  },
                                  {
                                    "expression": {
                                      "id": 1242,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1235,
                                        "name": "withdrawAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1227,
                                        "src": "4745:14:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1241,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1238,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1236,
                                                "name": "withdrawAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1227,
                                                "src": "4763:14:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 1237,
                                                "name": "withdrawAmountBooster",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 999,
                                                "src": "4780:21:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "4763:38:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1239,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "4762:40:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 1240,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4805:5:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "4762:48:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4745:65:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1243,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4745:65:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1247,
                                          "name": "withdrawAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1227,
                                          "src": "4849:14:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1244,
                                          "name": "cakePool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 961,
                                          "src": "4823:8:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ICakePool_$2109",
                                            "typeString": "contract ICakePool"
                                          }
                                        },
                                        "id": 1246,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "withdrawByAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2100,
                                        "src": "4823:25:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256) external"
                                        }
                                      },
                                      "id": 1248,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4823:41:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1249,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4823:41:7"
                                  },
                                  {
                                    "expression": {
                                      "id": 1259,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1250,
                                        "name": "currentPerformanceFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1159,
                                        "src": "4879:21:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1254,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "id": 1251,
                                              "name": "available",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1978,
                                              "src": "4903:9:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                "typeString": "function () view returns (uint256)"
                                              }
                                            },
                                            "id": 1252,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4903:11:7",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": ">=",
                                          "rightExpression": {
                                            "id": 1253,
                                            "name": "currentPerformanceFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1159,
                                            "src": "4918:21:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "4903:36:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 1256,
                                            "name": "available",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1978,
                                            "src": "4992:9:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                              "typeString": "function () view returns (uint256)"
                                            }
                                          },
                                          "id": 1257,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4992:11:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1258,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "4903:100:7",
                                        "trueExpression": {
                                          "id": 1255,
                                          "name": "currentPerformanceFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1159,
                                          "src": "4955:21:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4879:124:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1260,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4879:124:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1264,
                                          "name": "treasury",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 972,
                                          "src": "5035:8:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1265,
                                          "name": "currentPerformanceFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1159,
                                          "src": "5045:21:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1261,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 958,
                                          "src": "5016:5:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$298",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 1263,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "safeTransfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 366,
                                        "src": "5016:18:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
                                          "typeString": "function (contract IERC20,address,uint256)"
                                        }
                                      },
                                      "id": 1266,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5016:51:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1267,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5016:51:7"
                                  },
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 1269,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "5120:3:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1270,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "5120:10:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1271,
                                          "name": "currentPerformanceFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1159,
                                          "src": "5145:21:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1272,
                                          "name": "performanceFeeShares",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1162,
                                          "src": "5181:20:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1268,
                                        "name": "ChargePerformanceFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1034,
                                        "src": "5085:20:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256)"
                                        }
                                      },
                                      "id": 1273,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5085:129:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1274,
                                    "nodeType": "EmitStatement",
                                    "src": "5080:134:7"
                                  }
                                ]
                              },
                              "id": 1276,
                              "nodeType": "IfStatement",
                              "src": "4265:961:7",
                              "trueBody": {
                                "id": 1225,
                                "nodeType": "Block",
                                "src": "4303:53:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1223,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1221,
                                        "name": "chargeFeeFromDeposite",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1156,
                                        "src": "4316:21:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 1222,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4340:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "4316:28:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1224,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4316:28:7"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1282,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "5256:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1390,
                      "src": "5248:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1281,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5248:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1285,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1283,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2016,
                      "src": "5263:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5263:11:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5248:26:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1289,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5304:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5304:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1293,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5324:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CakeFlexiblePool_$2039",
                              "typeString": "contract CakeFlexiblePool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CakeFlexiblePool_$2039",
                              "typeString": "contract CakeFlexiblePool"
                            }
                          ],
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5316:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1291,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5316:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5316:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1295,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "5331:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1286,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "5281:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$298",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 392,
                      "src": "5281:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1297,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:58:7"
                },
                {
                  "condition": {
                    "id": 1298,
                    "name": "chargeFeeFromDeposite",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1156,
                    "src": "5350:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1318,
                  "nodeType": "IfStatement",
                  "src": "5346:260:7",
                  "trueBody": {
                    "id": 1317,
                    "nodeType": "Block",
                    "src": "5373:233:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1302,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "5401:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1303,
                              "name": "currentPerformanceFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1159,
                              "src": "5411:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1299,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "5382:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$298",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 366,
                            "src": "5382:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5382:51:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1305,
                        "nodeType": "ExpressionStatement",
                        "src": "5382:51:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1307,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5478:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5478:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1309,
                              "name": "currentPerformanceFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1159,
                              "src": "5499:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1310,
                              "name": "performanceFeeShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1162,
                              "src": "5531:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1306,
                            "name": "ChargePerformanceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1034,
                            "src": "5447:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5447:113:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1312,
                        "nodeType": "EmitStatement",
                        "src": "5442:118:7"
                      },
                      {
                        "expression": {
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1313,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "5569:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1314,
                            "name": "currentPerformanceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1159,
                            "src": "5577:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5569:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1316,
                        "nodeType": "ExpressionStatement",
                        "src": "5569:29:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1320,
                      "mutability": "mutable",
                      "name": "currentShares",
                      "nameLocation": "5620:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1390,
                      "src": "5612:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5612:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1321,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5612:21:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1322,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "5644:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5659:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5644:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1339,
                    "nodeType": "Block",
                    "src": "5731:40:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1335,
                            "name": "currentShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "5740:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1336,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "5756:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5740:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1338,
                        "nodeType": "ExpressionStatement",
                        "src": "5740:23:7"
                      }
                    ]
                  },
                  "id": 1340,
                  "nodeType": "IfStatement",
                  "src": "5640:131:7",
                  "trueBody": {
                    "id": 1334,
                    "nodeType": "Block",
                    "src": "5662:63:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1325,
                            "name": "currentShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "5671:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1326,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1130,
                                    "src": "5688:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1327,
                                    "name": "totalShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 968,
                                    "src": "5698:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5688:21:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1329,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5687:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1330,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "5713:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5687:30:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5671:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1333,
                        "nodeType": "ExpressionStatement",
                        "src": "5671:46:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1341,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "5779:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                          "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                        }
                      },
                      "id": 1343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 948,
                      "src": "5779:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1344,
                      "name": "currentShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1320,
                      "src": "5794:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5779:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "5779:28:7"
                },
                {
                  "expression": {
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1347,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "5814:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                          "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                        }
                      },
                      "id": 1349,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastDepositedTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 950,
                      "src": "5814:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1350,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5839:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5839:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5814:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "5814:40:7"
                },
                {
                  "expression": {
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1354,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "5863:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1355,
                      "name": "currentShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1320,
                      "src": "5878:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5863:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1357,
                  "nodeType": "ExpressionStatement",
                  "src": "5863:28:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1358,
                      "name": "_earn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2038,
                      "src": "5900:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5900:7:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1360,
                  "nodeType": "ExpressionStatement",
                  "src": "5900:7:7"
                },
                {
                  "expression": {
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1361,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "5916:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                          "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                        }
                      },
                      "id": 1363,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cakeAtLastUserAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 952,
                      "src": "5916:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1364,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1149,
                                "src": "5945:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                                  "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                                }
                              },
                              "id": 1365,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "shares",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 948,
                              "src": "5945:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1366,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2016,
                                "src": "5959:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5959:11:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5945:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1369,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5944:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 1370,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "5974:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5944:41:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5916:69:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1373,
                  "nodeType": "ExpressionStatement",
                  "src": "5916:69:7"
                },
                {
                  "expression": {
                    "id": 1379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1374,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "5992:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                          "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                        }
                      },
                      "id": 1376,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastUserActionTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 954,
                      "src": "5992:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1377,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "6018:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6018:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5992:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1380,
                  "nodeType": "ExpressionStatement",
                  "src": "5992:41:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1382,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6059:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6059:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1384,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "6071:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1385,
                        "name": "currentShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1320,
                        "src": "6080:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1386,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "6095:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6095:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1381,
                      "name": "DepositCake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1018,
                      "src": "6047:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6047:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1389,
                  "nodeType": "EmitStatement",
                  "src": "6042:69:7"
                }
              ]
            },
            "documentation": {
              "id": 1128,
              "nodeType": "StructuredDocumentation",
              "src": "3182:179:7",
              "text": " @notice Deposits funds into the Cake Flexible Pool.\n @dev Only possible when contract not paused.\n @param _amount: number of tokens to deposit (in CAKE)"
            },
            "functionSelector": "b6b55f25",
            "id": 1391,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1132,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "3408:13:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3408:13:7"
              }
            ],
            "name": "deposit",
            "nameLocation": "3374:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3390:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1391,
                  "src": "3382:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3381:17:7"
            },
            "returnParameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3422:0:7"
            },
            "scope": 2039,
            "src": "3365:2752:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1681,
              "nodeType": "Block",
              "src": "6288:2784:7",
              "statements": [
                {
                  "assignments": [
                    1399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1399,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "6312:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1681,
                      "src": "6295:21:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                        "typeString": "struct CakeFlexiblePool.UserInfo"
                      },
                      "typeName": {
                        "id": 1398,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1397,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 955,
                          "src": "6295:8:7"
                        },
                        "referencedDeclaration": 955,
                        "src": "6295:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                          "typeString": "struct CakeFlexiblePool.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1404,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1400,
                      "name": "userInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 966,
                      "src": "6319:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$955_storage_$",
                        "typeString": "mapping(address => struct CakeFlexiblePool.UserInfo storage ref)"
                      }
                    },
                    "id": 1403,
                    "indexExpression": {
                      "expression": {
                        "id": 1401,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "6328:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6328:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6319:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$955_storage",
                      "typeString": "struct CakeFlexiblePool.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6295:44:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1406,
                          "name": "_shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1394,
                          "src": "6354:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6364:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6354:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f207769746864726177",
                        "id": 1409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6367:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
                          "typeString": "literal_string \"Nothing to withdraw\""
                        },
                        "value": "Nothing to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
                          "typeString": "literal_string \"Nothing to withdraw\""
                        }
                      ],
                      "id": 1405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6346:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6346:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1411,
                  "nodeType": "ExpressionStatement",
                  "src": "6346:43:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1413,
                          "name": "_shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1394,
                          "src": "6404:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1414,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1399,
                            "src": "6415:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                              "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                            }
                          },
                          "id": 1415,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "shares",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 948,
                          "src": "6415:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6404:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "576974686472617720616d6f756e7420657863656564732062616c616e6365",
                        "id": 1417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6428:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
                          "typeString": "literal_string \"Withdraw amount exceeds balance\""
                        },
                        "value": "Withdraw amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
                          "typeString": "literal_string \"Withdraw amount exceeds balance\""
                        }
                      ],
                      "id": 1412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6396:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6396:66:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1419,
                  "nodeType": "ExpressionStatement",
                  "src": "6396:66:7"
                },
                {
                  "assignments": [
                    1421
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1421,
                      "mutability": "mutable",
                      "name": "totalAmount",
                      "nameLocation": "6506:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1681,
                      "src": "6498:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1420,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6498:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1430,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1422,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "6521:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                                "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                              }
                            },
                            "id": 1423,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "shares",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 948,
                            "src": "6521:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1424,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2016,
                              "src": "6535:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6535:11:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6521:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1427,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6520:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1428,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "6550:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6520:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6498:63:7"
                },
                {
                  "assignments": [
                    1432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1432,
                      "mutability": "mutable",
                      "name": "earnAmount",
                      "nameLocation": "6576:10:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1681,
                      "src": "6568:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1431,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6568:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1437,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1433,
                      "name": "totalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1421,
                      "src": "6589:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 1434,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1399,
                        "src": "6603:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                          "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                        }
                      },
                      "id": 1435,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cakeAtLastUserAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 952,
                      "src": "6603:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6589:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6568:60:7"
                },
                {
                  "assignments": [
                    1439
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1439,
                      "mutability": "mutable",
                      "name": "currentPerformanceFee",
                      "nameLocation": "6643:21:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1681,
                      "src": "6635:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1438,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6635:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1440,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6635:29:7"
                },
                {
                  "assignments": [
                    1442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1442,
                      "mutability": "mutable",
                      "name": "performanceFeeShares",
                      "nameLocation": "6679:20:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1681,
                      "src": "6671:28:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1441,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6671:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1443,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6671:28:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1444,
                      "name": "earnAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1432,
                      "src": "6710:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6723:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6710:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1477,
                  "nodeType": "IfStatement",
                  "src": "6706:287:7",
                  "trueBody": {
                    "id": 1476,
                    "nodeType": "Block",
                    "src": "6726:267:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1447,
                            "name": "currentPerformanceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1439,
                            "src": "6735:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1448,
                                    "name": "earnAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1432,
                                    "src": "6760:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1449,
                                    "name": "performanceFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1002,
                                    "src": "6773:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6760:27:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1451,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6759:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "3130303030",
                              "id": 1452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6791:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            },
                            "src": "6759:37:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6735:61:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1455,
                        "nodeType": "ExpressionStatement",
                        "src": "6735:61:7"
                      },
                      {
                        "expression": {
                          "id": 1464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1456,
                            "name": "performanceFeeShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1442,
                            "src": "6805:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1459,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1457,
                                    "name": "currentPerformanceFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1439,
                                    "src": "6838:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1458,
                                    "name": "totalShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 968,
                                    "src": "6862:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6838:35:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1460,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6837:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1461,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2016,
                                "src": "6886:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6886:11:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6837:60:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6805:92:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1465,
                        "nodeType": "ExpressionStatement",
                        "src": "6805:92:7"
                      },
                      {
                        "expression": {
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1466,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "6906:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                                "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                              }
                            },
                            "id": 1468,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "shares",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 948,
                            "src": "6906:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1469,
                            "name": "performanceFeeShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1442,
                            "src": "6921:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6906:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1471,
                        "nodeType": "ExpressionStatement",
                        "src": "6906:35:7"
                      },
                      {
                        "expression": {
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1472,
                            "name": "totalShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 968,
                            "src": "6950:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1473,
                            "name": "performanceFeeShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1442,
                            "src": "6965:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6950:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1475,
                        "nodeType": "ExpressionStatement",
                        "src": "6950:35:7"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1478,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1394,
                      "src": "7033:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 1479,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1399,
                        "src": "7043:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                          "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                        }
                      },
                      "id": 1480,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 948,
                      "src": "7043:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7033:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1488,
                  "nodeType": "IfStatement",
                  "src": "7029:65:7",
                  "trueBody": {
                    "id": 1487,
                    "nodeType": "Block",
                    "src": "7056:38:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1482,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1394,
                            "src": "7065:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1483,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "7075:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                                "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                              }
                            },
                            "id": 1484,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "shares",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 948,
                            "src": "7075:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7065:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1486,
                        "nodeType": "ExpressionStatement",
                        "src": "7065:21:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1490,
                      "mutability": "mutable",
                      "name": "currentAmount",
                      "nameLocation": "7182:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1681,
                      "src": "7174:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1489,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7174:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1501,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1491,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1394,
                            "src": "7199:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1492,
                                    "name": "balanceOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2016,
                                    "src": "7210:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 1493,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7210:11:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1494,
                                  "name": "currentPerformanceFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1439,
                                  "src": "7224:21:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7210:35:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1496,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7209:37:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7199:47:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1498,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7198:49:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1499,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "7257:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7198:70:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7174:94:7"
                },
                {
                  "expression": {
                    "id": 1506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1502,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1399,
                        "src": "7275:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                          "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                        }
                      },
                      "id": 1504,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 948,
                      "src": "7275:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1505,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1394,
                      "src": "7290:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7275:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1507,
                  "nodeType": "ExpressionStatement",
                  "src": "7275:22:7"
                },
                {
                  "expression": {
                    "id": 1510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1508,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "7304:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1509,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1394,
                      "src": "7319:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7304:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1511,
                  "nodeType": "ExpressionStatement",
                  "src": "7304:22:7"
                },
                {
                  "assignments": [
                    1513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1513,
                      "mutability": "mutable",
                      "name": "withdrawAmount",
                      "nameLocation": "7341:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1681,
                      "src": "7333:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1512,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7333:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1517,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1514,
                      "name": "currentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1490,
                      "src": "7358:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1515,
                      "name": "currentPerformanceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1439,
                      "src": "7374:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7358:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7333:62:7"
                },
                {
                  "condition": {
                    "id": 1518,
                    "name": "staking",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 975,
                    "src": "7406:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1544,
                  "nodeType": "IfStatement",
                  "src": "7402:473:7",
                  "trueBody": {
                    "id": 1543,
                    "nodeType": "Block",
                    "src": "7415:460:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1519,
                            "name": "withdrawAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1513,
                            "src": "7536:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1520,
                                "name": "withdrawAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1513,
                                "src": "7553:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1521,
                                "name": "MIN_WITHDRAW_AMOUNT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 993,
                                "src": "7570:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7553:36:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 1524,
                              "name": "withdrawAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1513,
                              "src": "7632:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "7553:93:7",
                            "trueExpression": {
                              "id": 1523,
                              "name": "MIN_WITHDRAW_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 993,
                              "src": "7601:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7536:110:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1527,
                        "nodeType": "ExpressionStatement",
                        "src": "7536:110:7"
                      },
                      {
                        "expression": {
                          "id": 1535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1528,
                            "name": "withdrawAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1513,
                            "src": "7752:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1529,
                                    "name": "withdrawAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1513,
                                    "src": "7770:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1530,
                                    "name": "withdrawAmountBooster",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 999,
                                    "src": "7787:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7770:38:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1532,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7769:40:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "3130303030",
                              "id": 1533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7812:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            },
                            "src": "7769:48:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7752:65:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1536,
                        "nodeType": "ExpressionStatement",
                        "src": "7752:65:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1540,
                              "name": "withdrawAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1513,
                              "src": "7852:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1537,
                              "name": "cakePool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "7826:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICakePool_$2109",
                                "typeString": "contract ICakePool"
                              }
                            },
                            "id": 1539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawByAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2100,
                            "src": "7826:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7826:41:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1542,
                        "nodeType": "ExpressionStatement",
                        "src": "7826:41:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1546,
                      "mutability": "mutable",
                      "name": "currentWithdrawFee",
                      "nameLocation": "7891:18:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1681,
                      "src": "7883:26:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1545,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7883:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1547,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7883:26:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1548,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "7920:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7920:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1550,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "7938:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                            "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                          }
                        },
                        "id": 1551,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastDepositedTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 950,
                        "src": "7938:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1552,
                        "name": "withdrawFeePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "7963:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7938:42:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7920:60:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1569,
                  "nodeType": "IfStatement",
                  "src": "7916:185:7",
                  "trueBody": {
                    "id": 1568,
                    "nodeType": "Block",
                    "src": "7982:119:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1555,
                            "name": "currentWithdrawFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1546,
                            "src": "7991:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1558,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1556,
                                    "name": "currentAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1490,
                                    "src": "8013:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1557,
                                    "name": "withdrawFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1005,
                                    "src": "8029:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8013:27:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1559,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8012:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "3130303030",
                              "id": 1560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8044:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            },
                            "src": "8012:37:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7991:58:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1563,
                        "nodeType": "ExpressionStatement",
                        "src": "7991:58:7"
                      },
                      {
                        "expression": {
                          "id": 1566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1564,
                            "name": "currentAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1490,
                            "src": "8058:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1565,
                            "name": "currentWithdrawFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1546,
                            "src": "8075:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8058:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1567,
                        "nodeType": "ExpressionStatement",
                        "src": "8058:35:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1571,
                      "mutability": "mutable",
                      "name": "totalFee",
                      "nameLocation": "8153:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1681,
                      "src": "8145:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1570,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8145:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1575,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1572,
                      "name": "currentPerformanceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1439,
                      "src": "8164:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1573,
                      "name": "currentWithdrawFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "8188:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8164:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8145:61:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1576,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1571,
                      "src": "8217:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8228:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8217:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1621,
                  "nodeType": "IfStatement",
                  "src": "8213:438:7",
                  "trueBody": {
                    "id": 1620,
                    "nodeType": "Block",
                    "src": "8231:420:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1579,
                            "name": "totalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1571,
                            "src": "8240:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1580,
                                  "name": "available",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1978,
                                  "src": "8251:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 1581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8251:11:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1582,
                                "name": "totalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1571,
                                "src": "8266:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8251:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1585,
                                "name": "available",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1978,
                                "src": "8288:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8288:11:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "8251:48:7",
                            "trueExpression": {
                              "id": 1584,
                              "name": "totalFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1571,
                              "src": "8277:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8240:59:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1589,
                        "nodeType": "ExpressionStatement",
                        "src": "8240:59:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1593,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "8327:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1594,
                              "name": "totalFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1571,
                              "src": "8337:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1590,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "8308:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$298",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 366,
                            "src": "8308:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8308:38:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1596,
                        "nodeType": "ExpressionStatement",
                        "src": "8308:38:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1597,
                            "name": "currentPerformanceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1439,
                            "src": "8359:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8383:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8359:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1608,
                        "nodeType": "IfStatement",
                        "src": "8355:178:7",
                        "trueBody": {
                          "id": 1607,
                          "nodeType": "Block",
                          "src": "8386:147:7",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1601,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "8435:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1602,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8435:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1603,
                                    "name": "currentPerformanceFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1439,
                                    "src": "8458:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1604,
                                    "name": "performanceFeeShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1442,
                                    "src": "8492:20:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1600,
                                  "name": "ChargePerformanceFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1034,
                                  "src": "8402:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 1605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8402:121:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1606,
                              "nodeType": "EmitStatement",
                              "src": "8397:126:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1609,
                            "name": "currentWithdrawFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1546,
                            "src": "8545:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8566:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8545:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1619,
                        "nodeType": "IfStatement",
                        "src": "8541:103:7",
                        "trueBody": {
                          "id": 1618,
                          "nodeType": "Block",
                          "src": "8569:75:7",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1613,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "8603:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1614,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8603:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1615,
                                    "name": "currentWithdrawFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1546,
                                    "src": "8615:18:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1612,
                                  "name": "ChargeWithdrawFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1040,
                                  "src": "8585:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8585:49:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1617,
                              "nodeType": "EmitStatement",
                              "src": "8580:54:7"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1622,
                      "name": "currentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1490,
                      "src": "8659:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1623,
                            "name": "available",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1978,
                            "src": "8675:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8675:11:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1625,
                          "name": "currentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1490,
                          "src": "8690:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8675:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1628,
                          "name": "available",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1978,
                          "src": "8722:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8722:11:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "8675:58:7",
                      "trueExpression": {
                        "id": 1627,
                        "name": "currentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1490,
                        "src": "8706:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8659:74:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1632,
                  "nodeType": "ExpressionStatement",
                  "src": "8659:74:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1636,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8759:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8759:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1638,
                        "name": "currentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1490,
                        "src": "8771:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1633,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "8740:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$298",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 366,
                      "src": "8740:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8740:45:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1640,
                  "nodeType": "ExpressionStatement",
                  "src": "8740:45:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1641,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1399,
                        "src": "8798:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                          "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                        }
                      },
                      "id": 1642,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 948,
                      "src": "8798:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8812:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8798:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1665,
                    "nodeType": "Block",
                    "src": "8907:46:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1659,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "8916:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                                "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                              }
                            },
                            "id": 1661,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "cakeAtLastUserAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 952,
                            "src": "8916:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8944:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8916:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1664,
                        "nodeType": "ExpressionStatement",
                        "src": "8916:29:7"
                      }
                    ]
                  },
                  "id": 1666,
                  "nodeType": "IfStatement",
                  "src": "8794:159:7",
                  "trueBody": {
                    "id": 1658,
                    "nodeType": "Block",
                    "src": "8815:86:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1645,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "8824:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                                "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                              }
                            },
                            "id": 1647,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "cakeAtLastUserAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 952,
                            "src": "8824:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1652,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1648,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1399,
                                      "src": "8853:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                                        "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                                      }
                                    },
                                    "id": 1649,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "shares",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 948,
                                    "src": "8853:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1650,
                                      "name": "balanceOf",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2016,
                                      "src": "8867:9:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 1651,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8867:11:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8853:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1653,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8852:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1654,
                              "name": "totalShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "8882:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8852:41:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8824:69:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1657,
                        "nodeType": "ExpressionStatement",
                        "src": "8824:69:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1667,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1399,
                        "src": "8961:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$955_storage_ptr",
                          "typeString": "struct CakeFlexiblePool.UserInfo storage pointer"
                        }
                      },
                      "id": 1669,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastUserActionTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 954,
                      "src": "8961:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1670,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "8987:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8987:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8961:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1673,
                  "nodeType": "ExpressionStatement",
                  "src": "8961:41:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1675,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9031:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9031:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1677,
                        "name": "currentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1490,
                        "src": "9043:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1678,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1394,
                        "src": "9058:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1674,
                      "name": "WithdrawShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1026,
                      "src": "9016:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9016:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1680,
                  "nodeType": "EmitStatement",
                  "src": "9011:55:7"
                }
              ]
            },
            "documentation": {
              "id": 1392,
              "nodeType": "StructuredDocumentation",
              "src": "6123:119:7",
              "text": " @notice Withdraws funds from the Cake Flexible Pool\n @param _shares: Number of shares to withdraw"
            },
            "functionSelector": "2e1a7d4d",
            "id": 1682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "6255:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1394,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "6272:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1682,
                  "src": "6264:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6264:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6263:17:7"
            },
            "returnParameters": {
              "id": 1396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6288:0:7"
            },
            "scope": 2039,
            "src": "6246:2826:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1694,
              "nodeType": "Block",
              "src": "9169:50:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1687,
                            "name": "userInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "9185:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$955_storage_$",
                              "typeString": "mapping(address => struct CakeFlexiblePool.UserInfo storage ref)"
                            }
                          },
                          "id": 1690,
                          "indexExpression": {
                            "expression": {
                              "id": 1688,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9194:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9194:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9185:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$955_storage",
                            "typeString": "struct CakeFlexiblePool.UserInfo storage ref"
                          }
                        },
                        "id": 1691,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "shares",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 948,
                        "src": "9185:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1686,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1682,
                      "src": "9176:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9176:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1693,
                  "nodeType": "ExpressionStatement",
                  "src": "9176:37:7"
                }
              ]
            },
            "documentation": {
              "id": 1683,
              "nodeType": "StructuredDocumentation",
              "src": "9078:55:7",
              "text": " @notice Withdraws all funds for a user"
            },
            "functionSelector": "853828b6",
            "id": 1695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nameLocation": "9146:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9157:2:7"
            },
            "returnParameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9169:0:7"
            },
            "scope": 2039,
            "src": "9137:82:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1721,
              "nodeType": "Block",
              "src": "9373:116:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1704,
                          "name": "_admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1698,
                          "src": "9388:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9406:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9398:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1705,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9398:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9398:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9388:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74206265207a65726f2061646472657373",
                        "id": 1710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9410:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                          "typeString": "literal_string \"Cannot be zero address\""
                        },
                        "value": "Cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                          "typeString": "literal_string \"Cannot be zero address\""
                        }
                      ],
                      "id": 1703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9380:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9380:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1712,
                  "nodeType": "ExpressionStatement",
                  "src": "9380:55:7"
                },
                {
                  "expression": {
                    "id": 1715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1713,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "9442:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1714,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1698,
                      "src": "9450:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9442:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1716,
                  "nodeType": "ExpressionStatement",
                  "src": "9442:14:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1718,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 970,
                        "src": "9477:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1717,
                      "name": "NewAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "9468:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9468:15:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1720,
                  "nodeType": "EmitStatement",
                  "src": "9463:20:7"
                }
              ]
            },
            "documentation": {
              "id": 1696,
              "nodeType": "StructuredDocumentation",
              "src": "9225:91:7",
              "text": " @notice Sets admin address\n @dev Only callable by the contract owner."
            },
            "functionSelector": "704b6c02",
            "id": 1722,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1701,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1700,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "9363:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "9363:9:7"
              }
            ],
            "name": "setAdmin",
            "nameLocation": "9329:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1698,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "9346:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1722,
                  "src": "9338:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9338:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9337:16:7"
            },
            "returnParameters": {
              "id": 1702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9373:0:7"
            },
            "scope": 2039,
            "src": "9320:169:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1748,
              "nodeType": "Block",
              "src": "9652:131:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1731,
                          "name": "_treasury",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1725,
                          "src": "9667:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9688:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9680:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1732,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9680:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9680:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9667:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74206265207a65726f2061646472657373",
                        "id": 1737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9692:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                          "typeString": "literal_string \"Cannot be zero address\""
                        },
                        "value": "Cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                          "typeString": "literal_string \"Cannot be zero address\""
                        }
                      ],
                      "id": 1730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9659:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9659:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1739,
                  "nodeType": "ExpressionStatement",
                  "src": "9659:58:7"
                },
                {
                  "expression": {
                    "id": 1742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1740,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "9724:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1741,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1725,
                      "src": "9735:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9724:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1743,
                  "nodeType": "ExpressionStatement",
                  "src": "9724:20:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1745,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "9768:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1744,
                      "name": "NewTreasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1052,
                      "src": "9756:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9756:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1747,
                  "nodeType": "EmitStatement",
                  "src": "9751:26:7"
                }
              ]
            },
            "documentation": {
              "id": 1723,
              "nodeType": "StructuredDocumentation",
              "src": "9495:94:7",
              "text": " @notice Sets treasury address\n @dev Only callable by the contract owner."
            },
            "functionSelector": "f0f44260",
            "id": 1749,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1727,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "9642:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "9642:9:7"
              }
            ],
            "name": "setTreasury",
            "nameLocation": "9602:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1725,
                  "mutability": "mutable",
                  "name": "_treasury",
                  "nameLocation": "9622:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1749,
                  "src": "9614:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9614:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9613:19:7"
            },
            "returnParameters": {
              "id": 1729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9652:0:7"
            },
            "scope": 2039,
            "src": "9593:190:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1772,
              "nodeType": "Block",
              "src": "9957:223:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1758,
                          "name": "_performanceFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "9980:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1759,
                          "name": "MAX_PERFORMANCE_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "9999:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9980:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "706572666f726d616e63654665652063616e6e6f74206265206d6f7265207468616e204d41585f504552464f524d414e43455f464545",
                        "id": 1761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10027:56:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5",
                          "typeString": "literal_string \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\""
                        },
                        "value": "performanceFee cannot be more than MAX_PERFORMANCE_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5",
                          "typeString": "literal_string \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\""
                        }
                      ],
                      "id": 1757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9964:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9964:126:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1763,
                  "nodeType": "ExpressionStatement",
                  "src": "9964:126:7"
                },
                {
                  "expression": {
                    "id": 1766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1764,
                      "name": "performanceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "10097:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1765,
                      "name": "_performanceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1752,
                      "src": "10114:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10097:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1767,
                  "nodeType": "ExpressionStatement",
                  "src": "10097:32:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1769,
                        "name": "performanceFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1002,
                        "src": "10159:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1768,
                      "name": "NewPerformanceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "10141:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10141:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1771,
                  "nodeType": "EmitStatement",
                  "src": "10136:38:7"
                }
              ]
            },
            "documentation": {
              "id": 1750,
              "nodeType": "StructuredDocumentation",
              "src": "9789:93:7",
              "text": " @notice Sets performance fee\n @dev Only callable by the contract admin."
            },
            "functionSelector": "70897b23",
            "id": 1773,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1755,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1754,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1127,
                  "src": "9947:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "9947:9:7"
              }
            ],
            "name": "setPerformanceFee",
            "nameLocation": "9895:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1752,
                  "mutability": "mutable",
                  "name": "_performanceFee",
                  "nameLocation": "9921:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1773,
                  "src": "9913:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9913:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9912:25:7"
            },
            "returnParameters": {
              "id": 1756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9957:0:7"
            },
            "scope": 2039,
            "src": "9886:294:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1796,
              "nodeType": "Block",
              "src": "10345:199:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1782,
                          "name": "_withdrawFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "10368:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1783,
                          "name": "MAX_WITHDRAW_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 981,
                          "src": "10384:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10368:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261774665652063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f464545",
                        "id": 1785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10409:50:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18",
                          "typeString": "literal_string \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\""
                        },
                        "value": "withdrawFee cannot be more than MAX_WITHDRAW_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18",
                          "typeString": "literal_string \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\""
                        }
                      ],
                      "id": 1781,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10352:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10352:114:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1787,
                  "nodeType": "ExpressionStatement",
                  "src": "10352:114:7"
                },
                {
                  "expression": {
                    "id": 1790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1788,
                      "name": "withdrawFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "10473:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1789,
                      "name": "_withdrawFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1776,
                      "src": "10487:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10473:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1791,
                  "nodeType": "ExpressionStatement",
                  "src": "10473:26:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1793,
                        "name": "withdrawFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "10526:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1792,
                      "name": "NewWithdrawFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1060,
                      "src": "10511:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10511:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1795,
                  "nodeType": "EmitStatement",
                  "src": "10506:32:7"
                }
              ]
            },
            "documentation": {
              "id": 1774,
              "nodeType": "StructuredDocumentation",
              "src": "10186:90:7",
              "text": " @notice Sets withdraw fee\n @dev Only callable by the contract admin."
            },
            "functionSelector": "b6ac642a",
            "id": 1797,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1779,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1778,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1127,
                  "src": "10335:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "10335:9:7"
              }
            ],
            "name": "setWithdrawFee",
            "nameLocation": "10289:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1776,
                  "mutability": "mutable",
                  "name": "_withdrawFee",
                  "nameLocation": "10312:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1797,
                  "src": "10304:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10304:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10303:22:7"
            },
            "returnParameters": {
              "id": 1780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10345:0:7"
            },
            "scope": 2039,
            "src": "10280:264:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1820,
              "nodeType": "Block",
              "src": "10728:249:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1806,
                          "name": "_withdrawFeePeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1800,
                          "src": "10751:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1807,
                          "name": "MAX_WITHDRAW_FEE_PERIOD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 984,
                          "src": "10773:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10751:45:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7769746864726177466565506572696f642063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f4645455f504552494f44",
                        "id": 1809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10805:63:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cfca239801295453e18a917561471428326355dcfd35c2679d3e455f8ddb6850",
                          "typeString": "literal_string \"withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD\""
                        },
                        "value": "withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cfca239801295453e18a917561471428326355dcfd35c2679d3e455f8ddb6850",
                          "typeString": "literal_string \"withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD\""
                        }
                      ],
                      "id": 1805,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10735:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10735:140:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1811,
                  "nodeType": "ExpressionStatement",
                  "src": "10735:140:7"
                },
                {
                  "expression": {
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1812,
                      "name": "withdrawFeePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1008,
                      "src": "10882:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1813,
                      "name": "_withdrawFeePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1800,
                      "src": "10902:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10882:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1815,
                  "nodeType": "ExpressionStatement",
                  "src": "10882:38:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1817,
                        "name": "withdrawFeePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "10953:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1816,
                      "name": "NewWithdrawFeePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1064,
                      "src": "10932:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10932:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1819,
                  "nodeType": "EmitStatement",
                  "src": "10927:44:7"
                }
              ]
            },
            "documentation": {
              "id": 1798,
              "nodeType": "StructuredDocumentation",
              "src": "10550:97:7",
              "text": " @notice Sets withdraw fee period\n @dev Only callable by the contract admin."
            },
            "functionSelector": "1efac1b8",
            "id": 1821,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1803,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1802,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1127,
                  "src": "10718:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "10718:9:7"
              }
            ],
            "name": "setWithdrawFeePeriod",
            "nameLocation": "10660:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1800,
                  "mutability": "mutable",
                  "name": "_withdrawFeePeriod",
                  "nameLocation": "10689:18:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1821,
                  "src": "10681:26:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10681:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10680:28:7"
            },
            "returnParameters": {
              "id": 1804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10728:0:7"
            },
            "scope": 2039,
            "src": "10651:326:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1851,
              "nodeType": "Block",
              "src": "11183:444:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1830,
                          "name": "_withdrawAmountBooster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1824,
                          "src": "11206:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1831,
                          "name": "MIN_WITHDRAW_AMOUNT_BOOSTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 996,
                          "src": "11232:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11206:53:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7769746864726177416d6f756e74426f6f737465722063616e6e6f74206265206c657373207468616e204d494e5f57495448445241575f414d4f554e545f424f4f53544552",
                        "id": 1833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11268:71:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7af6ebade090b850d4ce441cb7a468e96c8f7d31472380f361715f95d0d9e09",
                          "typeString": "literal_string \"withdrawAmountBooster cannot be less than MIN_WITHDRAW_AMOUNT_BOOSTER\""
                        },
                        "value": "withdrawAmountBooster cannot be less than MIN_WITHDRAW_AMOUNT_BOOSTER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7af6ebade090b850d4ce441cb7a468e96c8f7d31472380f361715f95d0d9e09",
                          "typeString": "literal_string \"withdrawAmountBooster cannot be less than MIN_WITHDRAW_AMOUNT_BOOSTER\""
                        }
                      ],
                      "id": 1829,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11190:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11190:156:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1835,
                  "nodeType": "ExpressionStatement",
                  "src": "11190:156:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1837,
                          "name": "_withdrawAmountBooster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1824,
                          "src": "11369:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1838,
                          "name": "MAX_WITHDRAW_AMOUNT_BOOSTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "11395:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11369:53:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7769746864726177416d6f756e74426f6f737465722063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f414d4f554e545f424f4f53544552",
                        "id": 1840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11431:71:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4da81aa2e0b60257d24bf972b3d3dd147bd4d186f868909df4f9a63ff1cc3d51",
                          "typeString": "literal_string \"withdrawAmountBooster cannot be more than MAX_WITHDRAW_AMOUNT_BOOSTER\""
                        },
                        "value": "withdrawAmountBooster cannot be more than MAX_WITHDRAW_AMOUNT_BOOSTER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4da81aa2e0b60257d24bf972b3d3dd147bd4d186f868909df4f9a63ff1cc3d51",
                          "typeString": "literal_string \"withdrawAmountBooster cannot be more than MAX_WITHDRAW_AMOUNT_BOOSTER\""
                        }
                      ],
                      "id": 1836,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11353:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11353:156:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1842,
                  "nodeType": "ExpressionStatement",
                  "src": "11353:156:7"
                },
                {
                  "expression": {
                    "id": 1845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1843,
                      "name": "withdrawAmountBooster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "11516:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1844,
                      "name": "_withdrawAmountBooster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1824,
                      "src": "11540:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11516:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1846,
                  "nodeType": "ExpressionStatement",
                  "src": "11516:46:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1848,
                        "name": "withdrawAmountBooster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "11599:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1847,
                      "name": "NewWithdrawAmountBooster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "11574:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11574:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1850,
                  "nodeType": "EmitStatement",
                  "src": "11569:52:7"
                }
              ]
            },
            "documentation": {
              "id": 1822,
              "nodeType": "StructuredDocumentation",
              "src": "10983:101:7",
              "text": " @notice Sets withdraw amount booster\n @dev Only callable by the contract admin."
            },
            "functionSelector": "8dd31366",
            "id": 1852,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1827,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1826,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1127,
                  "src": "11173:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "11173:9:7"
              }
            ],
            "name": "setWithdrawAmountBooster",
            "nameLocation": "11097:24:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1824,
                  "mutability": "mutable",
                  "name": "_withdrawAmountBooster",
                  "nameLocation": "11136:22:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1852,
                  "src": "11128:30:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11128:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11121:42:7"
            },
            "returnParameters": {
              "id": 1828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11183:0:7"
            },
            "scope": 2039,
            "src": "11088:539:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1872,
              "nodeType": "Block",
              "src": "11828:99:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1859,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "11843:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207374616b696e672063616b65",
                        "id": 1860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11852:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62e51dc5329a82cea9705de9975f8b128334b33c5f60e1529757a51e9314dd47",
                          "typeString": "literal_string \"No staking cake\""
                        },
                        "value": "No staking cake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62e51dc5329a82cea9705de9975f8b128334b33c5f60e1529757a51e9314dd47",
                          "typeString": "literal_string \"No staking cake\""
                        }
                      ],
                      "id": 1858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11835:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11835:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1862,
                  "nodeType": "ExpressionStatement",
                  "src": "11835:35:7"
                },
                {
                  "expression": {
                    "id": 1865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1863,
                      "name": "staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "11877:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11887:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "11877:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1866,
                  "nodeType": "ExpressionStatement",
                  "src": "11877:15:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1867,
                        "name": "cakePool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "11899:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICakePool_$2109",
                          "typeString": "contract ICakePool"
                        }
                      },
                      "id": 1869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2108,
                      "src": "11899:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11899:22:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1871,
                  "nodeType": "ExpressionStatement",
                  "src": "11899:22:7"
                }
              ]
            },
            "documentation": {
              "id": 1853,
              "nodeType": "StructuredDocumentation",
              "src": "11633:143:7",
              "text": " @notice Withdraws from Cake Pool without caring about rewards.\n @dev EMERGENCY ONLY. Only callable by the contract admin."
            },
            "functionSelector": "db2e21bc",
            "id": 1873,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1856,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1855,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1127,
                  "src": "11818:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "11818:9:7"
              }
            ],
            "name": "emergencyWithdraw",
            "nameLocation": "11789:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11806:2:7"
            },
            "returnParameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11828:0:7"
            },
            "scope": 2039,
            "src": "11780:147:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1912,
              "nodeType": "Block",
              "src": "12084:206:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1882,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1876,
                          "src": "12099:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1885,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "12117:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$298",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$298",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12109:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1883,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12109:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12109:14:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12099:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e2063616e6e6f742062652073616d65206173206465706f73697420746f6b656e",
                        "id": 1888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12125:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ea9d2748b0a4cf4d9041ea5447cc8d433bce6ae4e36584bac37b5bb6ca2fc19",
                          "typeString": "literal_string \"Token cannot be same as deposit token\""
                        },
                        "value": "Token cannot be same as deposit token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ea9d2748b0a4cf4d9041ea5447cc8d433bce6ae4e36584bac37b5bb6ca2fc19",
                          "typeString": "literal_string \"Token cannot be same as deposit token\""
                        }
                      ],
                      "id": 1881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12091:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12091:74:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1890,
                  "nodeType": "ExpressionStatement",
                  "src": "12091:74:7"
                },
                {
                  "assignments": [
                    1892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1892,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "12182:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1912,
                      "src": "12174:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1891,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12174:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1902,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1899,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "12224:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CakeFlexiblePool_$2039",
                              "typeString": "contract CakeFlexiblePool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CakeFlexiblePool_$2039",
                              "typeString": "contract CakeFlexiblePool"
                            }
                          ],
                          "id": 1898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12216:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1897,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12216:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12216:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1894,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1876,
                            "src": "12198:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1893,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "12191:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$298_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12191:14:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$298",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 255,
                      "src": "12191:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12191:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12174:56:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1907,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12265:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12265:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1909,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1892,
                        "src": "12277:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1904,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1876,
                            "src": "12244:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1903,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "12237:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$298_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12237:14:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$298",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 366,
                      "src": "12237:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12237:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1911,
                  "nodeType": "ExpressionStatement",
                  "src": "12237:47:7"
                }
              ]
            },
            "documentation": {
              "id": 1874,
              "nodeType": "StructuredDocumentation",
              "src": "11933:82:7",
              "text": " @notice Withdraw unexpected tokens sent to the Cake Flexible Pool"
            },
            "functionSelector": "def68a9c",
            "id": 1913,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1879,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1878,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1127,
                  "src": "12074:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "12074:9:7"
              }
            ],
            "name": "inCaseTokensGetStuck",
            "nameLocation": "12028:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1876,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "12057:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1913,
                  "src": "12049:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12049:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12048:16:7"
            },
            "returnParameters": {
              "id": 1880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12084:0:7"
            },
            "scope": 2039,
            "src": "12019:271:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1927,
              "nodeType": "Block",
              "src": "12448:40:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1921,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "12455:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12455:8:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1923,
                  "nodeType": "ExpressionStatement",
                  "src": "12455:8:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1924,
                      "name": "Pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "12475:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12475:7:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1926,
                  "nodeType": "EmitStatement",
                  "src": "12470:12:7"
                }
              ]
            },
            "documentation": {
              "id": 1914,
              "nodeType": "StructuredDocumentation",
              "src": "12296:98:7",
              "text": " @notice Triggers stopped state\n @dev Only possible when contract not paused."
            },
            "functionSelector": "8456cb59",
            "id": 1928,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1917,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1916,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1127,
                  "src": "12424:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "12424:9:7"
              },
              {
                "id": 1919,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1918,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "12434:13:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "12434:13:7"
              }
            ],
            "name": "pause",
            "nameLocation": "12407:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12412:2:7"
            },
            "returnParameters": {
              "id": 1920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12448:0:7"
            },
            "scope": 2039,
            "src": "12398:90:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1942,
              "nodeType": "Block",
              "src": "12645:44:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1936,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "12652:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12652:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1938,
                  "nodeType": "ExpressionStatement",
                  "src": "12652:10:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1939,
                      "name": "Unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1044,
                      "src": "12674:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12674:9:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1941,
                  "nodeType": "EmitStatement",
                  "src": "12669:14:7"
                }
              ]
            },
            "documentation": {
              "id": 1929,
              "nodeType": "StructuredDocumentation",
              "src": "12494:98:7",
              "text": " @notice Returns to normal state\n @dev Only possible when contract is paused."
            },
            "functionSelector": "3f4ba83a",
            "id": 1943,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1932,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1931,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1127,
                  "src": "12624:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "12624:9:7"
              },
              {
                "id": 1934,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1933,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 155,
                  "src": "12634:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "12634:10:7"
              }
            ],
            "name": "unpause",
            "nameLocation": "12605:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12612:2:7"
            },
            "returnParameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12645:0:7"
            },
            "scope": 2039,
            "src": "12596:93:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1962,
              "nodeType": "Block",
              "src": "12818:80:7",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1949,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "12832:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12847:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "12832:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1953,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2016,
                                "src": "12859:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12859:11:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 1955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12873:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "12859:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1957,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "12858:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 1958,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "12881:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12858:34:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "12832:60:7",
                    "trueExpression": {
                      "hexValue": "31653138",
                      "id": 1952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12851:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1948,
                  "id": 1961,
                  "nodeType": "Return",
                  "src": "12825:67:7"
                }
              ]
            },
            "documentation": {
              "id": 1944,
              "nodeType": "StructuredDocumentation",
              "src": "12695:55:7",
              "text": " @notice Calculates the price per share"
            },
            "functionSelector": "77c7b8fc",
            "id": 1963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPricePerFullShare",
            "nameLocation": "12763:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12783:2:7"
            },
            "returnParameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1963,
                  "src": "12809:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12809:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12808:9:7"
            },
            "scope": 2039,
            "src": "12754:144:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1977,
              "nodeType": "Block",
              "src": "13090:50:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1973,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "13128:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CakeFlexiblePool_$2039",
                              "typeString": "contract CakeFlexiblePool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CakeFlexiblePool_$2039",
                              "typeString": "contract CakeFlexiblePool"
                            }
                          ],
                          "id": 1972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13120:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1971,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13120:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13120:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1969,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "13104:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$298",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 255,
                      "src": "13104:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13104:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1968,
                  "id": 1976,
                  "nodeType": "Return",
                  "src": "13097:37:7"
                }
              ]
            },
            "documentation": {
              "id": 1964,
              "nodeType": "StructuredDocumentation",
              "src": "12904:131:7",
              "text": " @notice Custom logic for how much the pool to be borrowed\n @dev The contract puts 100% of the tokens to work."
            },
            "functionSelector": "48a0d754",
            "id": 1978,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "available",
            "nameLocation": "13048:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13057:2:7"
            },
            "returnParameters": {
              "id": 1968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1967,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1978,
                  "src": "13081:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13081:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13080:9:7"
            },
            "scope": 2039,
            "src": "13039:101:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2015,
              "nodeType": "Block",
              "src": "13336:230:7",
              "statements": [
                {
                  "assignments": [
                    1985,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1985,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "13352:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2015,
                      "src": "13344:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1984,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13344:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1993,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1990,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "13404:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CakeFlexiblePool_$2039",
                              "typeString": "contract CakeFlexiblePool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CakeFlexiblePool_$2039",
                              "typeString": "contract CakeFlexiblePool"
                            }
                          ],
                          "id": 1989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13396:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1988,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13396:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13396:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1986,
                        "name": "cakePool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "13378:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICakePool_$2109",
                          "typeString": "contract ICakePool"
                        }
                      },
                      "id": 1987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2083,
                      "src": "13378:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)"
                      }
                    },
                    "id": 1992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13378:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13343:67:7"
                },
                {
                  "assignments": [
                    1995
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1995,
                      "mutability": "mutable",
                      "name": "pricePerFullShare",
                      "nameLocation": "13425:17:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2015,
                      "src": "13417:25:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1994,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13417:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1999,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1996,
                        "name": "cakePool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "13445:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICakePool_$2109",
                          "typeString": "contract ICakePool"
                        }
                      },
                      "id": 1997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPricePerFullShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2088,
                      "src": "13445:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13445:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13417:59:7"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2004,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "13516:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CakeFlexiblePool_$2039",
                                "typeString": "contract CakeFlexiblePool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CakeFlexiblePool_$2039",
                                "typeString": "contract CakeFlexiblePool"
                              }
                            ],
                            "id": 2003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13508:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2002,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13508:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13508:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2000,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 958,
                          "src": "13492:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$298",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 255,
                        "src": "13492:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13492:30:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2007,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1985,
                              "src": "13526:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2008,
                              "name": "pricePerFullShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1995,
                              "src": "13535:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13526:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2010,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "13525:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 2011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13556:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "13525:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13492:68:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1983,
                  "id": 2014,
                  "nodeType": "Return",
                  "src": "13485:75:7"
                }
              ]
            },
            "documentation": {
              "id": 1979,
              "nodeType": "StructuredDocumentation",
              "src": "13146:135:7",
              "text": " @notice Calculates the total underlying tokens\n @dev It includes tokens held by the contract and held in CakePool"
            },
            "functionSelector": "722713f7",
            "id": 2016,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "13294:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13303:2:7"
            },
            "returnParameters": {
              "id": 1983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1982,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2016,
                  "src": "13327:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13327:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13326:9:7"
            },
            "scope": 2039,
            "src": "13285:281:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2037,
              "nodeType": "Block",
              "src": "13680:98:7",
              "statements": [
                {
                  "assignments": [
                    2021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2021,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "13695:3:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2037,
                      "src": "13687:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2020,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13687:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2024,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2022,
                      "name": "available",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1978,
                      "src": "13701:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13701:11:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13687:25:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2025,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2021,
                      "src": "13723:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13729:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13723:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2036,
                  "nodeType": "IfStatement",
                  "src": "13719:54:7",
                  "trueBody": {
                    "id": 2035,
                    "nodeType": "Block",
                    "src": "13732:41:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2031,
                              "name": "bal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "13758:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 2032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13763:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 2028,
                              "name": "cakePool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "13741:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICakePool_$2109",
                                "typeString": "contract ICakePool"
                              }
                            },
                            "id": 2030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2095,
                            "src": "13741:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 2033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13741:24:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2034,
                        "nodeType": "ExpressionStatement",
                        "src": "13741:24:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2017,
              "nodeType": "StructuredDocumentation",
              "src": "13572:78:7",
              "text": " @notice Deposits tokens into CakePool to earn staking rewards"
            },
            "id": 2038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_earn",
            "nameLocation": "13663:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13668:2:7"
            },
            "returnParameters": {
              "id": 2019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13680:0:7"
            },
            "scope": 2039,
            "src": "13654:124:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2040,
        "src": "278:13503:7",
        "usedErrors": []
      }
    ],
    "src": "33:13750:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "5611": {
      "events": {},
      "links": {},
      "address": "0x82d45CEeEA23e5ADc03E501C4bA43Cf94c1d7615",
      "transactionHash": "0x73836c7ee9eb8375f5b58bcc535bd679628d4c0e52f1b84bbc9c01821b079051"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-10-12T09:27:34.072Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "available()": {
        "details": "The contract puts 100% of the tokens to work."
      },
      "balanceOf()": {
        "details": "It includes tokens held by the contract and held in CakePool"
      },
      "constructor": {
        "params": {
          "_admin": ": address of the admin",
          "_cakePool": ": CakePool contract",
          "_token": ": Cake token contract",
          "_treasury": ": address of the treasury (collects fees)"
        }
      },
      "deposit(uint256)": {
        "details": "Only possible when contract not paused.",
        "params": {
          "_amount": ": number of tokens to deposit (in CAKE)"
        }
      },
      "emergencyWithdraw()": {
        "details": "EMERGENCY ONLY. Only callable by the contract admin."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Only possible when contract not paused."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAdmin(address)": {
        "details": "Only callable by the contract owner."
      },
      "setPerformanceFee(uint256)": {
        "details": "Only callable by the contract admin."
      },
      "setTreasury(address)": {
        "details": "Only callable by the contract owner."
      },
      "setWithdrawAmountBooster(uint256)": {
        "details": "Only callable by the contract admin."
      },
      "setWithdrawFee(uint256)": {
        "details": "Only callable by the contract admin."
      },
      "setWithdrawFeePeriod(uint256)": {
        "details": "Only callable by the contract admin."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Only possible when contract is paused."
      },
      "withdraw(uint256)": {
        "params": {
          "_shares": ": Number of shares to withdraw"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "available()": {
        "notice": "Custom logic for how much the pool to be borrowed"
      },
      "balanceOf()": {
        "notice": "Calculates the total underlying tokens"
      },
      "constructor": {
        "notice": "Constructor"
      },
      "deposit(uint256)": {
        "notice": "Deposits funds into the Cake Flexible Pool."
      },
      "emergencyWithdraw()": {
        "notice": "Withdraws from Cake Pool without caring about rewards."
      },
      "getPricePerFullShare()": {
        "notice": "Calculates the price per share"
      },
      "inCaseTokensGetStuck(address)": {
        "notice": "Withdraw unexpected tokens sent to the Cake Flexible Pool"
      },
      "pause()": {
        "notice": "Triggers stopped state"
      },
      "setAdmin(address)": {
        "notice": "Sets admin address"
      },
      "setPerformanceFee(uint256)": {
        "notice": "Sets performance fee"
      },
      "setTreasury(address)": {
        "notice": "Sets treasury address"
      },
      "setWithdrawAmountBooster(uint256)": {
        "notice": "Sets withdraw amount booster"
      },
      "setWithdrawFee(uint256)": {
        "notice": "Sets withdraw fee"
      },
      "setWithdrawFeePeriod(uint256)": {
        "notice": "Sets withdraw fee period"
      },
      "unpause()": {
        "notice": "Returns to normal state"
      },
      "withdraw(uint256)": {
        "notice": "Withdraws funds from the Cake Flexible Pool"
      },
      "withdrawAll()": {
        "notice": "Withdraws all funds for a user"
      }
    },
    "version": 1
  }
}